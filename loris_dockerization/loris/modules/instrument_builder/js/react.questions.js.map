{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./modules/instrument_builder/jsx/react.questions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","React","throwOnDirectAccess","isValidElement","REACT_ELEMENT_TYPE","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","isRequired","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_react","_propTypes","LorisElement","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","state","elementHtml","Type","_react2","default","createElement","Description","StaticElement","text","label","TextboxElement","TextareaElement","AllowMultiple","SelectElement","options","Values","emptyOption","multiple","DateElement","minYear","MinDate","maxYear","MaxDate","NumericElement","min","MinValue","max","MaxValue","Component","QuestionText","_this2","onChange","e","updateState","errorMessage","errorClass","error","questionText","className","inputLabel","type","id","size","BasicOptions","_this3","questionName","trim","split","join","Name","DropdownOptions","_this4","option","addOption","resetOptions","setState","temp","newSelectOption","Instrument","Options","multi","dropdownClass","onClick","DateOptions","_this5","dateFormat","Date","BasicDate","MonthYear","dateOptionsClass","dateFormatOptions","dateOption","NumericOptions","_this6","parseInt","optionsClass","numeric","ListElements","_this7","selectType","newId","newValue","newState","selected","textSize","htmlFor","data-toggle","role","title","AddElement","_this8","undefined","addQuestion","hasError","alert","minDate","maxDate","isNaN","_max","addPage","index","updateQuestions","$","val","questionInput","header","buttons","window"],"mappings":"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","file":"./modules/instrument_builder/js/react.questions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","module.exports = React;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* exported LorisElement, QuestionText, BasicOptions, DropdownOptions, DateOptions,\n NumericOptions, ListElements, AddElement */\n\n/* global Instrument */\n\n/**\n * This file contains the React classes for instrument builder\n * module. It is used to add and edit questions in the instrument\n * builder.\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/*\n * Note: This is a wrapper for Form.js (Only used in instrument builder)\n *\n * This is the React class for a LORIS element. It takes\n * in an element and render's the HTML based on its type\n *\n */\nclass LorisElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let element = this.props.element;\n    let elementHtml = '';\n    switch (element.Type) {\n      case 'header':\n        elementHtml = <h2>{element.Description}</h2>;\n        break;\n      case 'label':\n        elementHtml = <p>{element.Description}</p>;\n        break;\n      case 'score':\n        elementHtml = <StaticElement text={0} label={element.Description} />;\n\n        break;\n      case 'text':\n        if (element.Options.Type === 'small') {\n          elementHtml = <TextboxElement label={element.Description}/>;\n        } else {\n          elementHtml = <TextareaElement label={element.Description}/>;\n        }\n        break;\n      case 'select':\n        if (element.Options.AllowMultiple) {\n          elementHtml = <SelectElement label={element.Description}\n                                       options={element.Options.Values}\n                                       emptyOption={false}\n                                       multiple={true}/>;\n        } else {\n          elementHtml = <SelectElement label={element.Description}\n                                       emptyOption={false}\n                                       options={element.Options.Values}/>;\n        }\n        break;\n      case 'date':\n        elementHtml = <DateElement\n          label={element.Description}\n          minYear={element.Options.MinDate}\n          maxYear={element.Options.MaxDate}\n        />;\n        break;\n      case 'numeric':\n        elementHtml = <NumericElement\n          label={element.Description}\n          min={element.Options.MinValue}\n          max={element.Options.MaxValue}\n        />;\n        break;\n      default:\n        break;\n    }\n    return (\n      <div>{elementHtml}</div>\n    );\n  }\n}\n\n/*\n * This is the React class for the question text input\n */\nclass QuestionText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n    // Keep track of the current input\n  onChange(e) {\n    this.props.updateState({Description: e.target.value});\n  }\n    // Render the HTML\n  render() {\n    let errorMessage = '';\n    let errorClass = 'form-group';\n    if (this.props.element.error && this.props.element.error.questionText) {\n      // If an error is present, display the error\n      errorMessage = (<font className=\"form-error\">{this.props.element.error.questionText}</font>);\n      errorClass += ' has-error';\n    }\n    return (\n      <div className={errorClass}>\n        <label className=\"col-sm-2 control-label\">{this.props.inputLabel}: </label>\n        <div className=\"col-sm-6\">\n          <input className=\"form-control col-xs-12\"\n            type=\"text\" id=\"questionText\"\n            size=\"75\"\n            value={this.props.element ? this.props.element.Description : ''}\n            onChange={this.onChange}\n          />\n          {errorMessage}\n        </div>\n      </div>\n    );\n  }\n}\nQuestionText.propTypes = {\n  inputLabel: PropTypes.string,\n};\nQuestionText.defaultProps = {\n  inputLabel: 'Question Text',\n};\n\n/*\n * This is the React class for the question name input\n */\nclass BasicOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n  // Keep track of the current input\n  onChange(e) {\n    // replace whitespaces with underscores\n    let questionName = (e.target.value).trim().split(' ').join('_');\n    this.props.updateState({Name: questionName});\n  }\n  // Render the HTML\n  render() {\n    let errorMessage = '';\n    let errorClass = 'form-group';\n    if (this.props.element.error && this.props.element.error.questionName) {\n      // If an error is present, display the error\n      errorMessage = (<font className=\"form-error\">{this.props.element.error.questionName}</font>);\n      errorClass += ' has-error';\n    }\n    return (\n      <div>\n        <div className={errorClass}>\n          <label className=\"col-sm-2 control-label\">Question Name: </label>\n          <div className=\"col-sm-6\">\n            <input className=\"form-control\"\n              type=\"text\" id=\"questionName\"\n              onChange={this.onChange}\n              value={this.props.element ? this.props.element.Name : ''}\n            />\n            {errorMessage}\n          </div>\n        </div>\n        <QuestionText\n          updateState={this.props.updateState}\n          element={this.props.element}\n        />\n      </div>\n    );\n  }\n}\n\n/*\n * This is the React class for the Dropdown options\n */\nclass DropdownOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option: '',\n    };\n    this.onChange = this.onChange.bind(this);\n    this.addOption = this.addOption.bind(this);\n    this.resetOptions = this.resetOptions.bind(this);\n  }\n  onChange(e) {\n    this.setState({\n      option: e.target.value,\n    });\n  }\n  // Add an option to the element\n  addOption() {\n    let option = this.state.option.trim();\n\n    // Check for empty options\n    if (option === '') {\n      let temp = (this.state.error) ? this.state.error : {};\n      temp.newSelectOption = 'Dropdown options cannot be empty!';\n      this.setState({\n        error: temp,\n      });\n      return;\n    }\n\n    // Remove error if corrected\n    if (this.state.error) {\n      let temp = this.state.error;\n      delete temp.newSelectOption;\n      this.setState({\n        error: temp,\n      });\n    }\n\n    // add to option list\n    let temp = Instrument.clone(this.props.element.Options);\n    let key = Instrument.enumize(this.state.option);\n    temp.Values[key] = this.state.option;\n    this.props.updateState({Options: temp});\n\n    // clear input field\n    this.state.option = '';\n  }\n  // Reset the dropdown options\n  resetOptions() {\n    let temp = Instrument.clone(this.props.element.Options);\n    temp.Values = {};\n    this.props.updateState({Options: temp});\n  }\n  // Render the HTML\n  render() {\n    let multi = '';\n    let options = Instrument.clone(this.props.element.Options.Values);\n    let errorMessage = '';\n    let dropdownClass = 'form-group';\n\n    // Set the select option type\n    if (this.props.element.Options.AllowMultiple) {\n      multi = 'multiple';\n    }\n\n    // If an error is present, display the error\n    if (this.state.error && this.state.error.newSelectOption) {\n      errorMessage = (\n        <span className=\"form-error\">{this.state.error.newSelectOption}</span>\n      );\n      dropdownClass += ' has-error';\n    }\n\n    return (\n      <div>\n        <BasicOptions\n          updateState={this.props.updateState}\n          element={this.props.element}\n        />\n        <div className={dropdownClass}>\n          <label className=\"col-sm-2 control-label\">Dropdown Option: </label>\n          <div className=\"col-sm-3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id=\"newSelectOption\"\n              value={this.state.option}\n              onChange={this.onChange}\n            />\n          </div>\n          <input\n            className=\"btn btn-default\"\n            type=\"button\"\n            value=\"Add option\"\n            onClick={this.addOption.bind(this, false) }\n          />\n          <input\n            className=\"btn btn-default\"\n            type=\"button\"\n            value=\"Reset\"\n            onClick={this.resetOptions}\n          />\n          <div className=\"col-sm-6 col-sm-offset-2\">\n            {errorMessage}\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"col-sm-2 control-label\">Preview: </label>\n          <div className=\"col-sm-2\">\n            <select multiple={multi} id=\"selectOptions\" className=\"form-control\">\n              {Object.keys(options).map(function(option, key) {\n                return (<option key={key}>{options[option]}</option>);\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n * This is the React class for the date options\n */\nclass DateOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateFormat: {\n        Date: 'Standard Date',\n        BasicDate: 'Basic Date (does not include \\'Not Answered\\' option)',\n        MonthYear: 'Month Year (does not include day of the month)',\n      },\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.element.Options.dateFormat = '';\n  }\n    // Keep track of the inputed years\n  onChange(e) {\n    let options = Instrument.clone(this.props.element.Options);\n    if (e.target.id === 'datemin' && e.target.value.length > 0) {\n      options.MinDate = e.target.value + '-01-01';\n    } else if (e.target.id === 'datemax' && e.target.value.length > 0) {\n      options.MaxDate = e.target.value + '-12-31';\n    } else if (e.target.id === 'dateFormat') {\n      options.dateFormat = e.target.value;\n    }\n    this.props.updateState({Options: options});\n  }\n  // Render the HTML\n  render() {\n    // Truncate off the month and day from the date to only have the year.\n    let minYear = this.props.element.Options.MinDate.split('-')[0];\n    let maxYear = this.props.element.Options.MaxDate.split('-')[0];\n\n    let dateOptionsClass = 'options form-group';\n    let errorMessage = '';\n\n    let dateFormatOptions = this.state.dateFormat;\n\n    if (this.props.element.error && this.props.element.error.dateOption) {\n      // If an error is present, display the error\n      errorMessage = (\n        <span className=\"form-error\">{this.props.element.error.dateOption}</span>\n      );\n      dateOptionsClass += ' has-error';\n    }\n\n    return (\n      <div>\n        <BasicOptions\n          updateState={this.props.updateState}\n          element={this.props.element}\n        />\n        <div id=\"dateoptions\" className={dateOptionsClass}>\n          <label className=\"col-sm-2 control-label\">Start year: </label>\n          <div className=\"col-sm-2\">\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              id=\"datemin\"\n              min=\"1900\"\n              max=\"2100\"\n              value={minYear}\n              onChange={this.onChange}\n            />\n            {errorMessage}\n          </div>\n          <label className=\"col-sm-2 control-label\">End year: </label>\n          <div className=\"col-sm-2\">\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              id=\"datemax\"\n              min=\"1900\"\n              max=\"2100\"\n              onChange={this.onChange}\n              value={maxYear}\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"col-sm-2 control-label\">Date Format: </label>\n          <div className=\"col-sm-6\">\n            <select\n              id=\"dateFormat\"\n              className=\"form-control\"\n              onChange={this.onChange}>\n              {Object.keys(dateFormatOptions).map(function(option, key) {\n                return (\n                  <option key={key} value={option}>\n                    {dateFormatOptions[option]}\n                  </option>\n                );\n              }) }\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n * This is the React class for the numeric options\n */\nclass NumericOptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // Keep track of the inputed numbers, casting them to\n  // interger values.\n  onChange(e) {\n    let options = Instrument.clone(this.props.element.Options);\n\n    if (e.target.id === 'numericmin') {\n      options.MinValue = parseInt(e.target.value, 10);\n    } else if (e.target.id === 'numericmax') {\n      options.MaxValue = parseInt(e.target.value, 10);\n    }\n    this.props.updateState({Options: options});\n  }\n  // Render the HTML\n  render() {\n    let errorMessage = '';\n    let optionsClass = 'options form-group';\n\n        // If an error is present, display the error\n    if (this.props.element.error && this.props.element.error.numeric) {\n      errorMessage = (<span className=\"form-error\">{this.props.element.error.numeric}</span>);\n      optionsClass += 'options form-group has-error';\n    }\n\n    return (\n      <div>\n        <BasicOptions\n          updateState={this.props.updateState}\n          element={this.props.element}\n        />\n        <div id=\"numericoptions\" className={optionsClass}>\n          <label className=\"col-sm-2 control-label\">Min: </label>\n          <div className=\"col-sm-2\">\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              id=\"numericmin\"\n              onChange={this.onChange}\n              value={this.props.element.Options.MinValue}\n            />\n          </div>\n          <label className=\"col-sm-2 control-label\">Max: </label>\n          <div className=\"col-sm-2\">\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              id=\"numericmax\"\n              onChange={this.onChange}\n              value={this.props.element.Options.MaxValue}\n            />\n          </div>\n          <div className=\"col-sm-offset-2 col-sm-10\">\n            {errorMessage}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n * This is the React class for the dropdown for the\n *  different question types.\n */\nclass ListElements extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.selectType = this.selectType.bind(this);\n  }\n    // Set the desired question type\n  selectType(newId, newValue) {\n    let newState = {\n      selected: {\n        id: newId,\n        value: newValue,\n      },\n    };\n    let multi = false;\n    let textSize = 'small';\n    // Set the options for the desired type\n    switch (newId) {\n      case 'textarea':\n        textSize = 'large';\n        // falls through\n      case 'textbox':\n        newState.Options = {\n          Type: textSize,\n        };\n        break;\n      case 'multiselect':\n        multi = true;\n        // falls through\n      case 'dropdown':\n        newState.Options = {\n          Values: {},\n          AllowMultiple: multi,\n        };\n        break;\n      case 'date':\n        newState.Options = {\n          MinDate: '',\n          MaxDate: '',\n        };\n        break;\n      case 'numeric':\n        newState.Options = {\n          MinValue: 0,\n          MaxValue: 0,\n        };\n        break;\n      default:\n        break;\n    }\n    this.props.updateState(newState);\n  }\n    // Render the HTML\n  render() {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"selected-input\" className=\"col-sm-2 control-label\">Question Type:</label>\n            <div className=\"col-sm-4\">\n                <div className=\"btn-group\">\n                    <button id=\"selected-input\" type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n                        <span id=\"search_concept\">{this.props.value} </span>\n                        <span className=\"caret\"></span>\n                    </button>\n                    <ul className=\"dropdown-menu\" role=\"menu\">\n                        <li>\n                            <div className=\"col-sm-12\"><h5 className=\"\">Information</h5></div>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'header', 'Header')}>\n                            <a id=\"header\" className=\"option\" title=\"Centered, header information\">Header</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'label', 'Label')}>\n                            <a id=\"label\" className=\"option\" title=\"Unemphasized display text\">Label</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'score', 'Scored Field')}>\n                            <a id=\"scored\" className=\"option\" title=\"Column which stores calculated data\">Scored Field</a>\n                        </li>\n                        <li className=\"divider\"></li>\n                        <li>\n                            <div className=\"col-sm-12\"><h5 className=\"\">Data entry</h5></div>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'textbox', 'Textbox')}>\n                            <a id=\"textbox\" className=\"option\" title=\"Text box for user data entry\">Textbox</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'textarea', 'Textarea')}>\n                            <a id=\"textarea\" className=\"option\" title=\"Larger text area for data entry\">Textarea</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'dropdown', 'Dropdown')}>\n                            <a id=\"dropdown\" className=\"option\" title=\"Dropdown menu for users to select data from\">Dropdown</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'multiselect', 'Multiselect')}>\n                            <a id=\"multiselect\" className=\"option\" title=\"Data entry where multiple options may be selected\">Multiselect</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'date', 'Date')}>\n                            <a id=\"date\" className=\"option\" title=\"User data entry of a date\">Date</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'numeric', 'Numeric')}>\n                            <a id=\"numeric\" className=\"option\" title=\"User data entry of a number\">Numeric</a>\n                        </li>\n                        <li className=\"divider\"></li>\n                        <li>\n                            <div className=\"col-sm-12\"><h5 className=\"\">Formatting</h5></div>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'line', 'Blank Line')}>\n                            <a id=\"line\" className=\"option\" title=\"Empty line\">Blank Line</a>\n                        </li>\n                        <li onClick={this.selectType.bind(this, 'page-break', 'Page Break')}>\n                            <a id=\"page-break\" className=\"option\" title=\"Start a new page\">Page Break</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\n/*\n * This is the React class for adding a new element or\n * editing an existing one\n */\nclass AddElement extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props !== undefined && this.props.element) {\n      // Editing an element, set to elements state\n      this.state = {\n        Options: Instrument.clone(this.props.element.Options === undefined ? {} : this.props.element.Options ),\n        Description: Instrument.clone(this.props.element.Description),\n        Name: Instrument.clone(this.props.element.Name === undefined ? '' : this.props.element.Name),\n        selected: Instrument.clone(this.props.element.selected),\n      };\n    } else {\n      this.state = {\n        Options: {},\n        Description: '',\n        Name: '',\n        selected: {\n          id: '',\n          value: 'Select One',\n        },\n      };\n    }\n    this.updateState = this.updateState.bind(this);\n    this.addQuestion = this.addQuestion.bind(this);\n    this.addOption = this.addOption.bind(this);\n    this.resetOptions = this.resetOptions.bind(this);\n  }\n\n  // Update element state\n  updateState(newState) {\n    this.setState(newState);\n  }\n  // Add a question to the buildPane\n  addQuestion() {\n    let selected = this.state.selected.id;\n    let questionText = this.state.Description;\n    let questionName = this.state.Name;\n    let hasError = false;\n\n    if (questionName && questionName.indexOf('status') > -1) {\n      alert('Question name can\\'t contain \\'status\\' as part of the name!');\n      return;\n    }\n\n    if (!selected) {\n      // Error, no element selected, alert the user and return\n      alert('No element type selected');\n      return;\n    }\n\n    if (selected === 'date') {\n      let min = this.state.Options.MinDate;\n      let max = this.state.Options.MaxDate;\n      let minYear = parseInt(min, 10);\n      let maxYear = parseInt(max, 10);\n      let minDate = Date.parse(min);\n      let maxDate = Date.parse(max);\n      if ((isNaN(minDate) && min !== '') || (isNaN(maxDate) && max !== '')) {\n        let temp = (this.state.error) ? this.state.error : {};\n\n        temp.dateOption = 'Invalid date provided';\n        this.setState({\n          error: temp,\n        });\n        hasError = true;\n      }\n\n      if (minDate > maxDate && min !== '' && max !== '') {\n        let temp = (this.state.error) ? this.state.error : {};\n\n        temp.dateOption = 'End year append before start year';\n        this.setState({\n          error: temp,\n        });\n        hasError = true;\n      }\n      if (minYear > 9999 || minYear < 1000 || maxYear > 9999 || maxYear < 1000) {\n        let temp = (this.state.error) ? this.state.error : {};\n\n        temp.dateOption = 'The year must have exactly 4 digits. Please choose an integer number between 1000 and 9999.';\n        this.setState({\n          error: temp,\n        });\n        hasError = true;\n      }\n\n      if (!hasError && this.state.error) {\n        let temp = this.state.error;\n        delete temp.dateOption;\n        this.setState({\n          error: temp,\n        });\n      }\n    }\n\n        // Checking for error on numeric field\n    if (selected === 'numeric') {\n      let min = this.state.Options.MinValue;\n      let max = this.state.Options.MaxValue;\n\n      if (min >= max) {\n        let temp = (this.state.error) ? this.state.error : {};\n        temp.numeric = 'Max value must be larger than min value';\n        this.setState({\n          error: temp,\n        });\n        hasError = true;\n      }\n\n            // If error corrected, remove error message and error\n      if (!hasError && this.state.error) {\n        let temp = this.state.error;\n        delete temp.numeric;\n        this.setState({\n          error: temp,\n        });\n      }\n    }\n\n    if (questionText === '' && selected !== 'line') {\n        // Error, question text is required. Set the element error flag\n        // for the questionText with message. Set the hasError flag\n      let temp = (this.state.error) ? this.state.error : {};\n      if (selected === 'page-break') {\n        temp.questionText = 'Must use question text as page header';\n      } else {\n        temp.questionText = 'No question text specified';\n      }\n      this.setState({\n        error: temp,\n      });\n      hasError = true;\n    }\n\n    if (!hasError && this.state.error) {\n        // No error, remove the elememt's questionText error flag\n        // if set\n      let temp = this.state.error;\n      delete temp.questionText;\n      this.setState({\n        error: temp,\n      });\n    }\n\n    if (questionName === '' && selected !== 'header' && selected !== 'label' &&\n      selected !== 'line' && selected !== 'page-break') {\n      // Error, question name is needed for the desired type. Set the element\n      // error flag for the questionName with message. Set the hasError flag\n      let temp = (this.state.error) ? this.state.error : {};\n      temp.questionName = 'Must specifiy name for database to save value into';\n      this.setState({\n        error: temp,\n      });\n      hasError = true;\n    } else if (this.state.error) {\n      // No error, remove the elememt's questionName error flag if set\n      let temp = this.state.error;\n      delete temp.questionName;\n      this.setState({\n        error: temp,\n      });\n    }\n    if (hasError) {\n      // An error is present, return\n      return;\n    }\n\n    // Setup the desired element to be added\n    switch (selected) {\n      case 'header':\n      case 'label':\n        questionName = '';\n        break;\n      case 'textbox':\n      case 'textarea':\n        selected = 'text';\n        break;\n      case 'dropdown':\n      case 'multiselect':\n        selected = 'select';\n        break;\n      case 'page-break':\n        // If page-break, add new page to the buildPane\n        // element list\n        this.props.addPage(questionText);\n        return;\n      default:\n        break;\n    }\n\n    // Remove all error flags\n    delete this.state.error;\n    let element = {\n      Type: selected,\n      Description: questionText,\n      Name: questionName,\n      Options: this.state.Options,\n      selected: this.state.selected,\n    };\n\n    // Add/Update the Page's element array. The updateQuestion returns true\n    // if element was added/updated, false if the element name already exists.\n    if (typeof this.props.index === 'undefined') {\n      hasError = !this.props.updateQuestions(element);\n    } else {\n      // If editing, supply updateQuestion with the elements index in the\n      // Page's element array.\n      hasError = !this.props.updateQuestions(element, this.props.index);\n    }\n\n    if (hasError) {\n      // Error, element name already exists. Set the element error flag\n      // for the questionName with message.\n      this.setState(function(state) {\n        let temp = (state.error) ? state.error : {};\n        temp.questionName = 'Duplicate question name';\n        return {\n          error: temp,\n        };\n      });\n    }\n  }\n    // Add an option to the options array\n  addOption(multi) {\n    // Use a function to update the state to enqueue an atomic\n    // update that consults the previous value of state before\n    // setting any values\n    this.setState(function(state) {\n      let temp = state.options;\n      let option = multi ? $('#newmultiSelectOption').val() : $('#newSelectOption').val();\n      temp.push(option);\n      return {\n        options: temp,\n      };\n    });\n  }\n    // Reset the options array\n  resetOptions() {\n    this.setState({\n      options: [],\n    });\n  }\n    // Render the HTML\n  render() {\n    let questionInput;\n    let header = '';\n    let buttons;\n        // Set the inputs to display based on the desired element type\n    switch (this.state.selected.id) {\n      case 'header':\n      case 'label':\n        questionInput = <QuestionText updateState={this.updateState} element={this.state}/>;\n        break;\n      case 'page-break':\n        questionInput = <QuestionText updateState={this.updateState} element={this.state} inputLabel={'Page Name'}/>;\n        break;\n      case 'score':\n      case 'textbox':\n      case 'textarea':\n        questionInput = <BasicOptions updateState={this.updateState} element={this.state}/>;\n        break;\n      case 'multiselect':\n      case 'dropdown':\n        questionInput = <DropdownOptions updateState={this.updateState} element={this.state}/>;\n        break;\n      case 'date':\n        questionInput = <DateOptions updateState={this.updateState} element={this.state}/>;\n        break;\n      case 'numeric':\n        questionInput = <NumericOptions updateState={this.updateState} element={this.state}/>;\n        break;\n      default:\n        break;\n    }\n\n    // Set the button/header based on whether you are editing or adding an element.\n    if (this.props.element) {\n      buttons = (\n        <input\n          className=\"btn btn-default\"\n          type=\"button\"\n          value=\"Edit Row\"\n          onClick={this.addQuestion}\n        />\n      );\n    } else {\n      header = (<h2>Add Question</h2>);\n      buttons = (\n        <input\n          className=\"btn btn-default\"\n          type=\"button\"\n          value=\"Add Row\"\n          onClick={this.addQuestion}\n        />\n      );\n    }\n    return (\n      <div className=\"col-xs-12\">\n        {header}\n        <div className=\"form-horizontal\" role=\"form\">\n          <ListElements\n            updateState={this.updateState}\n            value={this.state.selected.value}\n          />\n          {questionInput}\n          <div className=\"form-group\">\n            <div className=\"col-sm-offset-2 col-sm-10\">\n              {buttons}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.LorisElement = LorisElement;\nwindow.QuestionText = QuestionText;\nwindow.BasicOptions = BasicOptions;\nwindow.DropdownOptions = DropdownOptions;\nwindow.DateOptions = DateOptions;\nwindow.NumericOptions = NumericOptions;\nwindow.ListElements = ListElements;\nwindow.AddElement = AddElement;\n\nexport default {\n  LorisElement,\n  QuestionText,\n  BasicOptions,\n  DropdownOptions,\n  DateOptions,\n  NumericOptions,\n  ListElements,\n  AddElement,\n};\n"],"sourceRoot":""}