{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./modules/dataquery/jsx/react.app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","React","throwOnDirectAccess","isValidElement","REACT_ELEMENT_TYPE","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","isRequired","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_react","_propTypes","SavedQueriesList","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","state","loadQuery","queryName","onSelectQuery","queryDetails","Fields","Conditions","userSaved","globalSaved","curQuery","queriesLoaded","_react2","default","createElement","userQueries","length","href","onClick","globalQueries","_i","className","data-toggle","role","aria-expanded","Component","DataQueryApp","_this2","displayType","fields","criteria","sessiondata","grouplevel","queryIDs","SavedQueries","savedQueries","alertLoaded","alertSaved","alertConflict","show","ActiveTab","rowData","filter","type","activeOperator","children","session","AllSessions","selectedFields","downloadableFields","loading","saveFilterRule","saveFilterGroup","saveCurrentQuery","overrideQuery","loadFilterRule","loadFilterGroup","loadSavedQuery","fieldVisitSelect","fieldChange","getSessions","runQuery","getRowData","dismissAlert","resetQuery","changeDataDisplay","updateFilter","_this3","domNode","$","e","target","parentNode","promises","curRequest","Promise","resolve","loris","data","DocID","dataType","then","queries","setState","allDone","all","rule","savedRule","field","operator","instrument","visit","group","savedFilter","shared","override","_this4","Filters","QueryName","SharedQuery","OverwriteQuery","id","JSON","script","url","success","async","category","allSessions","allCandiates","_this5","filterState","fieldsList","Array","map","item","fieldInfo","Value","Operator","fieldSplit","Visits","_key","_i2","IsFile","downloadable","action","temp","fieldName","_this6","_key3","idx","_key4","allVisits","sessions","_this7","DocTypes","semaphore","sectionedSessions","ajaxComplete","rowdata","field_split","sessionInfo","j","DocType","Sessions","row","rows","identifier","displayID","sort","currow","Identifiers","RowHeaders","fileData","sd","_id","encodeURIComponent","colHeader","index","_session","tabs","tabsNav","alert","InfoTabPane","TabId","UpdatedTime","Loading","Active","FieldSelectTabPane","categories","onFieldChange","FilterSelectTabPane","ViewDataTabPane","Criteria","Data","RowInfo","FileData","onRunQueryClicked","StatsVisualizationTabPane","ManageSavedQueriesTabPane","User","Shared","onSaveQuery","aria-label","aria-hidden","class","widthClass","sideBar","FieldsSidebar","data-tabs","loadedQuery","window"],"mappings":"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","file":"./modules/dataquery/js/react.app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 51);\n","module.exports = React;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n *  The following file contains the base component for the data query react app.\n *  It also contains the component for the saved queries dropdown.\n *\n *  @author   Jordan Stirling <jstirling91@gmail.com>\n *  @author   Dave MacFarlane <david.macfarlane2@mcgill.ca>\n *  @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3\n *  @link     https://github.com/mohadesz/Loris-Trunk\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/*\n *  The following component is for saved queries dropdown which appears in the\n *  tab bar of the base component.\n */\nclass SavedQueriesList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.loadQuery = this.loadQuery.bind(this);\n  }\n\n  componentDidMount() {\n\n  }\n\n  loadQuery(queryName) {\n    // Loads in the selected query\n\n    this.props.onSelectQuery(\n      this.props.queryDetails[queryName].Fields,\n      this.props.queryDetails[queryName].Conditions\n    );\n  }\n\n  render() {\n    // Renders the html for the component\n\n    let userSaved = [];\n    let globalSaved = [];\n    let queryName, curQuery;\n\n    if (this.props.queriesLoaded === false) {\n      return <div/>;\n    }\n    // Build the list for the user queries\n    for (let i = 0; i < this.props.userQueries.length; i += 1) {\n      curQuery = this.props.queryDetails[this.props.userQueries[i]];\n      if (curQuery.Meta && curQuery.Meta.name) {\n        queryName = curQuery.Meta.name;\n      } else {\n        queryName = this.props.userQueries[i];\n      }\n      userSaved.push(<li key={this.props.userQueries[i]}><a href='#' onClick={this.loadQuery.bind(this, this.props.userQueries[i])}>{queryName}</a></li>);\n    }\n    // Build the list for the global queries\n    for (let i = 0; i < this.props.globalQueries.length; i += 1) {\n      curQuery = this.props.queryDetails[this.props.globalQueries[i]];\n      if (curQuery.Meta && curQuery.Meta.name) {\n        queryName = curQuery.Meta.name;\n      } else {\n        queryName = this.props.globalQueries[i];\n      }\n      globalSaved.push(<li key={this.props.globalQueries[i]}><a href='#' onClick={this.loadQuery.bind(this, this.props.globalQueries[i])}>{queryName}</a></li>);\n    }\n    return (\n      <ul className='nav nav-tabs navbar-right'>\n        <li className='dropdown'>\n          <a href='#' className='dropdown-toggle' data-toggle='dropdown' role='button' aria-expanded='false'>Load Saved Query <span className='caret'></span></a>\n          <ul className='dropdown-menu' role='menu'>\n            <li role='presentation' className='dropdown-header'>User Saved Queries</li>\n            {userSaved}\n            <li role='presentation' className='dropdown-header'>Shared Saved Queries</li>\n            {globalSaved}\n          </ul>\n        </li>\n        <li role='presentation'><a href='#SavedQueriesTab' data-toggle='tab'>Manage Saved Queries</a></li>\n      </ul>\n    );\n  }\n}\n\nSavedQueriesList.propTypes = {\n  queryDetails: PropTypes.array,\n  queriesLoaded: PropTypes.bool,\n};\nSavedQueriesList.defaultProps = {\n  queryDetails: [],\n  queriesLoaded: false,\n};\n\n/*\n *  The following component is the data queries base element. It controls which tab is currently\n *  shown, along with keeping the state of the current query being built and running the query.\n */\nclass DataQueryApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayType: 'Cross-sectional',\n      fields: [],\n      criteria: {},\n      sessiondata: {},\n      grouplevel: 0,\n      queryIDs: this.props.SavedQueries,\n      savedQueries: {},\n      queriesLoaded: false,\n      alertLoaded: false,\n      alertSaved: false,\n      alertConflict: {\n        show: false\n      },\n      ActiveTab: 'Info',\n      rowData: {},\n      filter: {\n        type: 'group',\n        activeOperator: 0,\n        children: [\n          {\n            type: 'rule'\n          }\n        ],\n        session: this.props.AllSessions\n      },\n      selectedFields: {},\n      downloadableFields: {},\n      loading: false\n    };\n    this.saveFilterRule = this.saveFilterRule.bind(this);\n    this.saveFilterGroup = this.saveFilterGroup.bind(this);\n    this.saveCurrentQuery = this.saveCurrentQuery.bind(this);\n    this.overrideQuery = this.overrideQuery.bind(this);\n    this.loadFilterRule = this.loadFilterRule.bind(this);\n    this.loadFilterGroup = this.loadFilterGroup.bind(this);\n    this.loadSavedQuery = this.loadSavedQuery.bind(this);\n    this.fieldVisitSelect = this.fieldVisitSelect.bind(this);\n    this.fieldChange = this.fieldChange.bind(this);\n    this.getSessions = this.getSessions.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n    this.getRowData = this.getRowData.bind(this);\n    this.dismissAlert = this.dismissAlert.bind(this);\n    this.resetQuery = this.resetQuery.bind(this);\n    this.changeDataDisplay = this.changeDataDisplay.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n  }\n\n  componentDidMount() {\n    // Before the dataquery is loaded into the window, this function is called to gather\n    // any data that was not passed in the initial load.\n\n    // The left and right menu items are part of the same menu, but bootstrap considers\n    // them two separate ones, so we need to make sure that only one is selected by removing\n    // \"active\" from all the tab classes and only adding it to the really active one\n    let domNode = this;\n    $(domNode).find('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      $(domNode).find('li').removeClass('active');\n      if (e.target) {\n        e.target.classList.add('active');\n        // Both the <li> tag and the <a> tag should be active\n        if (e.target.parentNode) {\n          e.target.parentNode.classList.add('active');\n        }\n      }\n    });\n\n    // Load the save queries' details\n    let promises = [];\n    for (let key in this.state.queryIDs) {\n      for (let i = 0; i < this.state.queryIDs[key].length; i += 1) {\n        let curRequest;\n        curRequest = Promise.resolve(\n          $.ajax(loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=GetDoc.php&DocID=' + this.state.queryIDs[key][i]), {\n            data: {\n              DocID: this.state.queryIDs[key][i]\n            },\n            dataType: 'json'\n          }).then((value) => {\n          let queries = this.state.savedQueries;\n\n          queries[value._id] = value;\n          this.setState({savedQueries: queries});\n        });\n        promises.push(curRequest);\n      }\n    }\n\n    let allDone = Promise.all(promises).then((value) => {\n      this.setState({'queriesLoaded': true});\n    });\n    $('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      this.setState({\n        ActiveTab: e.target.getAttribute('href').substr(1)\n      });\n    });\n  }\n\n  saveFilterRule(rule) {\n    // Used to build a filter rule for saving query\n\n    let savedRule = {\n      field: rule.field,\n      operator: rule.operator,\n      value: rule.value,\n      instrument: rule.instrument,\n      visit: rule.visit\n    };\n    return savedRule;\n  }\n\n  saveFilterGroup(group) {\n    // Used to build a filter group for saving query\n\n    let savedFilter = {\n      activeOperator: group.activeOperator,\n      children: []\n    };\n    // Recursively build the filter groups children\n    for (let i = 0; i < group.children.length; i++) {\n      if (group.children[i].type === 'rule') {\n        savedFilter.children.push(this.saveFilterRule(group.children[i]));\n      } else if (group.children[i].type === 'group') {\n        savedFilter.children.push(this.saveFilterGroup(group.children[i]));\n      }\n    }\n    return savedFilter;\n  }\n\n  saveCurrentQuery(name, shared, override) {\n    // Used to save the current query\n\n    let filter = this.saveFilterGroup(this.state.filter);\n\n    $.post(loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=saveQuery.php', {\n      Fields: this.state.selectedFields,\n      Filters: filter,\n      QueryName: name,\n      SharedQuery: shared,\n      OverwriteQuery: override\n    }, (data) => {\n      // Once saved, add the query to the list of saved queries\n      let id = JSON.parse(data).id,\n        queryIDs = this.state.queryIDs;\n      if (!override) {\n        if (shared === true) {\n          queryIDs.Shared.push(id);\n        } else {\n          queryIDs.User.push(id);\n        }\n      }\n      $.get(loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=GetDoc.php&DocID=' + id,\n        (value) => {\n          let queries = this.state.savedQueries;\n\n          queries[value._id] = value;\n          this.setState({\n            savedQueries: queries,\n            queryIDs: queryIDs,\n            alertLoaded: false,\n            alertSaved: true,\n            alertConflict: {\n              show: false\n            }\n          });\n        });\n    }).fail((data) => {\n      if (data.status === 409) {\n        this.setState({\n          alertConflict: {\n            show: true,\n            QueryName: name,\n            SharedQuery: shared\n          }\n        })\n      }\n    });\n  }\n\n  overrideQuery() {\n    this.saveCurrentQuery(\n      this.state.alertConflict.QueryName,\n      this.state.alertConflict.SharedQuery,\n      true\n    )\n  }\n\n  loadFilterRule(rule) {\n    // Used to load in a filter rule\n\n    let script;\n    if (!rule.type) {\n      rule.type = 'rule'\n    }\n\n    // Get given fields of the instrument for the rule.\n    // This call is made synchronously\n    $.ajax({\n      url: loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=datadictionary.php',\n      success: (data) => {\n        rule.fields = data;\n      },\n      async: false,\n      data: {category: rule.instrument},\n      dataType: 'json'\n    });\n\n    // Find the rules selected field's data type\n    for (let i = 0; i < rule.fields.length; i++) {\n      if (rule.fields[i].key[1] === rule.field) {\n        rule.fieldType = rule.fields[i].value.Type;\n        break;\n      }\n    }\n\n    // Get the sessions which meet the rules criterias.\n    // TODO:    Build the sessions in the new format\n    switch (rule.operator) {\n      case 'equal':\n      case 'isNull':\n        script = 'queryEqual.php';\n        break;\n      case 'notEqual':\n      case 'isNotNull':\n        script = 'queryNotEqual.php';\n        break;\n      case 'lessThanEqual':\n        script = 'queryLessThanEqual.php';\n        break;\n      case 'greaterThanEqual':\n        script = 'queryGreaterThanEqual.php';\n        break;\n      case 'startsWith':\n        script = 'queryStartsWith.php';\n        break;\n      case 'contains':\n        script = 'queryContains.php';\n        break;\n      default:\n        break;\n    }\n    $.ajax({\n      url: loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=' + script,\n      success: (data) => {\n        let i,\n          allSessions = {},\n          allCandiates = {};\n        // Loop through data and divide into individual visits with unique PSCIDs\n        // storing a master list of unique PSCIDs\n        for (i = 0; i < data.length; i++) {\n          if (!allSessions[data[i][1]]) {\n            allSessions[data[i][1]] = [];\n          }\n          allSessions[data[i][1]].push(data[i][0]);\n          if (!allCandiates[data[i][0]]) {\n            allCandiates[data[i][0]] = []\n          }\n          allCandiates[data[i][0]].push(data[i][1]);\n        }\n        rule.candidates = {\n          allCandiates: allCandiates,\n          allSessions: allSessions\n        };\n        if (rule.visit === 'All') {\n          rule.session = Object.keys(allCandiates);\n        } else {\n          if (allSessions[rule.visit]) {\n            rule.session = allSessions[rule.visit];\n          } else {\n            rule.session = [];\n          }\n        }\n      },\n      async: false,\n      data: {\n        category: rule.instrument,\n        field: rule.field,\n        value: rule.value\n      },\n      dataType: 'json'\n    });\n\n    return rule;\n  }\n\n  loadFilterGroup(group) {\n    // Used to load in a filter group\n\n    // Recursively load the children on the group\n    for (let i = 0; i < group.children.length; i++) {\n      if (group.children[i].activeOperator) {\n        if (!group.children[i].type) {\n          group.children[i].type = 'group'\n        }\n        group.children[i] = this.loadFilterGroup(group.children[i]);\n      } else {\n        group.children[i] = this.loadFilterRule(group.children[i]);\n      }\n    }\n    group.session = getSessions(group);\n    return group;\n  }\n\n  loadSavedQuery(fields, criteria) {\n    // Used to load a saved query\n\n    let filterState = {},\n      selectedFields = {},\n      fieldsList = [];\n    this.setState({loading: true});\n    if (Array.isArray(criteria)) {\n      // This is used to load a query that is saved in the old format\n      // so translate it into the new format, grouping the given critiras\n      // into a filter group\n\n      filterState = {\n        type: 'group',\n        activeOperator: 0,\n        children: []\n      };\n      filterState.children = criteria.map((item) => {\n        let fieldInfo = item.Field.split(',');\n        let rule = {\n          instrument: fieldInfo[0],\n          field: fieldInfo[1],\n          value: item.Value,\n          type: 'rule',\n          visit: 'All'\n        };\n        switch (item.Operator) {\n          case '=':\n            rule.operator = 'equal';\n            break;\n          case '!=':\n            rule.operator = 'notEqual';\n            break;\n          case '<=':\n            rule.operator = 'lessThanEqual';\n            break;\n          case '>=':\n            rule.operator = 'greaterThanEqual';\n            break;\n          default:\n            rule.operator = item.Operator;\n            break;\n        }\n        return rule;\n      });\n\n      let fieldSplit;\n      fieldsList = fields;\n      for (let i = 0; i < fields.length; i++) {\n        fieldSplit = fields[i].split(',');\n        if (!selectedFields[fieldSplit[0]]) {\n          selectedFields[fieldSplit[0]] = {};\n          selectedFields[fieldSplit[0]][fieldSplit[1]] = {};\n          selectedFields[fieldSplit[0]].allVisits = {};\n          for (let key in this.props.Visits) {\n            selectedFields[fieldSplit[0]].allVisits[key] = 1;\n            selectedFields[fieldSplit[0]][fieldSplit[1]][key] = [key];\n          }\n        } else {\n          selectedFields[fieldSplit[0]][fieldSplit[1]] = {};\n          for (let key in this.props.Visits) {\n            selectedFields[fieldSplit[0]].allVisits[key]++;\n            selectedFields[fieldSplit[0]][fieldSplit[1]][key] = [key];\n          }\n        }\n      }\n    } else {\n      // Query was saved in the new format\n      filterState = criteria;\n      selectedFields = fields;\n      for (let instrument in fields) {\n        for (let field in fields[instrument]) {\n          if (field !== 'allVisits') {\n            fieldsList.push(instrument + ',' + field);\n          }\n        }\n      }\n    }\n    if (filterState.children && filterState.children.length > 0) {\n      filterState = this.loadFilterGroup(filterState);\n    } else {\n      filterState.children = [\n        {\n          type: 'rule'\n        }\n      ];\n      filterState.session = this.props.AllSessions;\n    }\n    this.setState({\n      fields: fieldsList,\n      selectedFields: selectedFields,\n      filter: filterState,\n      alertLoaded: true,\n      alertSaved: false,\n      loading: false,\n    });\n    for (let i = 0; i < fieldsList.length; i++) {\n      $.ajax({\n        url: loris.BaseURL + '/dataquery/ajax/datadictionary.php',\n        success: (data) => {\n          if (data[0].value.IsFile) {\n            let key = data[0].key[0] + ',' + data[0].key[1];\n            let downloadable = this.state.downloadableFields;\n            downloadable[key] = true;\n            this.setState({\n              downloadableFields: downloadable,\n            })\n          }\n        },\n        data: {key: fieldsList[i]},\n        dataType: 'json'\n      });\n    }\n  }\n\n  fieldVisitSelect(action, visit, field) {\n    // Used to select visits for a given field\n    this.setState((state) => {\n      let temp = state.selectedFields[field.instrument];\n      if (action === 'check') {\n        // Adding a new visit for field, add visit to field and\n        // increase count of visit in allVisits\n        temp[field.field][visit] = visit;\n        if (temp.allVisits[visit]) {\n          temp.allVisits[visit]++;\n        } else {\n          temp.allVisits[visit] = 1;\n        }\n      } else {\n        // Removing visit, delete visit from field\n        delete temp[field.field][visit];\n        if (temp.allVisits[visit] === 1) {\n          // If visit count in allVisits is 1 delete visit from\n          // allVisits\n          delete temp.allVisits[visit];\n        } else {\n          // Else decrement count of visit in allVisists\n          temp.allVisits[visit]--;\n        }\n      }\n      return temp;\n    });\n  }\n\n  fieldChange(fieldName, category, downloadable) {\n    // Used to add and remove fields from the current query being built\n\n    this.setState((state) => {\n      let selectedFields = state.selectedFields,\n        fields = state.fields.slice(0);\n      if (!selectedFields[category]) {\n        // The given category has no selected fields, add the category to the selectedFields\n        selectedFields[category] = {};\n        // Add all visits to the given field for the given category\n        selectedFields[category][fieldName] = JSON.parse(JSON.stringify(this.props.Visits));\n        // Add all visits to the given category, initializing their counts to 1\n        selectedFields[category].allVisits = {};\n        for (let key in this.props.Visits) {\n          selectedFields[category].allVisits[key] = 1;\n        }\n\n        // Add field to the field list\n        fields.push(category + ',' + fieldName);\n\n        if (downloadable) {\n          // If the field is downloadable add to the list of downloadable fields\n          state.downloadableFields[category + ',' + fieldName] = true;\n        }\n      } else if (selectedFields[category][fieldName]) {\n        // Remove the field from the selectedFields\n        for (let key in selectedFields[category][fieldName]) {\n          // Decrement the count of field's visits, delete visit if count is 1\n          if (selectedFields[category].allVisits[key] === 1) {\n            delete selectedFields[category].allVisits[key];\n          } else {\n            selectedFields[category].allVisits[key]--;\n          }\n        }\n        delete selectedFields[category][fieldName];\n\n        // Find the given field in the fields list and remove it\n        let idx = fields.indexOf(category + ',' + fieldName);\n        fields.splice(idx, 1);\n\n        if (Object.keys(selectedFields[category]).length === 1) {\n          // If no more fields left for category, delete category from\n          // selectedFields\n          delete selectedFields[category];\n        }\n\n        if (downloadable) {\n          // If the field was downloadable, delete it from the downloadable list\n          delete state.downloadableFields[category + ',' + fieldName];\n        }\n      } else {\n        // The category already has fields but not the desired one, add it\n        if (!selectedFields[category][fieldName]) {\n          selectedFields[category][fieldName] = {};\n        }\n\n        // Increment the visit count for the visit, setting it to 1 if doesn't exist\n        for (let key in selectedFields[category].allVisits) {\n          if (key === 'allVisits') {\n            continue;\n          }\n          selectedFields[category].allVisits[key]++;\n          selectedFields[category][fieldName][key] = key;\n        }\n        fields.push(category + ',' + fieldName);\n        if (downloadable) {\n          // If the field is downloadable add to the list of downloadable fields\n          state.downloadableFields[category + ',' + fieldName] = true;\n        }\n      }\n      return {\n        selectedFields: selectedFields,\n        fields: fields\n      };\n    });\n  }\n\n  getSessions() {\n    // Get the sessions to be selected\n\n    if (this.state.filter.children.length > 0) {\n      // If filter exists return filter sessions\n      return this.state.filter.session;\n    } else {\n      // Else return all sessions\n      return this.props.AllSessions;\n    }\n  }\n\n  runQuery(fields, sessions) {\n    // Run the current query\n\n    let DocTypes = [],\n      semaphore = 0,\n      sectionedSessions,\n      ajaxComplete = () => {\n        // Wait until all ajax calls have completed before computing the rowdata\n        if (semaphore == 0) {\n          let rowdata = this.getRowData(this.state.grouplevel);\n          this.setState({\n            rowData: rowdata,\n            loading: false\n          });\n        }\n      };\n\n    // Reset the rowData and sessiondata\n    this.setState({\n      rowData: {},\n      sessiondata: {},\n      loading: true\n    });\n\n    // Get list of DocTypes to be retrieved\n    for (let i = 0; i < fields.length; i += 1) {\n      let field_split = fields[i].split(',');\n      let category = field_split[0];\n\n      // Check if the current category has already been queried, if so skip\n      if (DocTypes.indexOf(category) === -1) {\n        let sessionInfo = [];\n\n        // Build the session data to be queried for the given category\n        for (let j = 0; j < this.state.filter.session.length; j++) {\n          if (Array.isArray(this.state.filter.session[j])) {\n            if (this.state.selectedFields[category].allVisits[this.state.filter.session[j][1]]) {\n              sessionInfo.push(this.state.filter.session[j]);\n            }\n          } else {\n            for (let key in this.state.selectedFields[category].allVisits) {\n              let temp = [];\n\n              temp.push(this.state.filter.session[j]);\n              // Add the visit to the temp variable then add to the sessions to be queried\n              temp.push(key);\n              sessionInfo.push(temp);\n            }\n          }\n        }\n\n        DocTypes.push(category);\n        // keep track of the number of requests waiting for a response\n        semaphore++;\n        sectionedSessions = JSON.stringify(sessionInfo);\n        $.ajax({\n          type: 'POST',\n          url: loris.BaseURL + '/AjaxHelper.php?Module=dataquery&script=retrieveCategoryDocs.php',\n          data: {\n            DocType: category,\n            Sessions: sectionedSessions\n          },\n          dataType: 'text',\n          success: (data) => {\n            if (data) {\n              let i, row, rows, identifier,\n                sessiondata = this.state.sessiondata;\n              data = JSON.parse(data);\n              rows = data.rows;\n              for (i = 0; i < rows.length; i += 1) {\n                /*\n                 * each row is a JSON object of the\n                 * form:\n                 * {\n                 *  \"key\" : [category, pscid, vl],\n                 *  \"value\" : [pscid, vl],\n                 *  \"doc\": {\n                 *      Meta: { stuff }\n                 *      data: { \"FieldName\" : \"Value\", .. }\n                 * }\n                 */\n                row = rows[i];\n                identifier = row.value;\n                if (!sessiondata.hasOwnProperty(identifier)) {\n                  sessiondata[identifier] = {}\n                }\n\n                sessiondata[identifier][row.key[0]] = row.doc;\n\n              }\n              this.setState({'sessiondata': sessiondata});\n            }\n            semaphore--;\n            ajaxComplete();\n          }\n        });\n      }\n    }\n  }\n\n  getRowData(displayID) {\n    // Build the queried data to be displayed in the data table\n\n    let sessiondata = this.state.sessiondata;\n    let sessions = this.getSessions();\n    let fields = this.state.fields.sort();\n    let downloadableFields = this.state.downloadableFields;\n    let i, j;\n    let rowdata = [];\n    let currow = [];\n    let Identifiers = [];\n    let RowHeaders = [];\n    let fileData = [];\n    let href;\n\n    if (displayID === 0) {\n      // Displaying the data in the cross-sectional way\n\n      // Add the fields as the tables headers\n      for (i = 0; fields && i < fields.length; i += 1) {\n        RowHeaders.push(fields[i]);\n      }\n\n      // Build the table rows, using the session data as the row identifier\n      for (let session in sessiondata) {\n        currow = [];\n        for (i = 0; fields && i < fields.length; i += 1) {\n          let fieldSplit = fields[i].split(',');\n          currow[i] = '.';\n          let sd = sessiondata[session];\n          if (sd[fieldSplit[0]] && sd[fieldSplit[0]].data[fieldSplit[1]] && downloadableFields[fields[i]]) {\n            // If the current field has data and is downloadable, create a download link\n            href = loris.BaseURL + '/mri/jiv/get_file.php?file=' + sd[fieldSplit[0]].data[fieldSplit[1]];\n            currow[i] = (\n              <a href={href}>\n                {sd[fieldSplit[0]].data[fieldSplit[1]]}\n              </a>\n            );\n            fileData.push('file/' + sd[fieldSplit[0]]._id + '/' + encodeURIComponent(sd[fieldSplit[0]].data[fieldSplit[1]]));\n          } else if (sd[fieldSplit[0]]) {\n            // else if field is not null add data and string\n            currow[i] = sd[fieldSplit[0]].data[fieldSplit[1]];\n          }\n        }\n        rowdata.push(currow);\n        Identifiers.push(session);\n      }\n    } else {\n      // Displaying the data in the longitudinal way\n\n      let Visits = {},\n        visit, identifier, temp, colHeader, index, instrument, fieldSplit;\n\n      // Loop trough session data building the row identifiers and desired visits\n      for (let session in sessiondata) {\n        temp = session.split(',');\n        visit = temp[1];\n        if (!Visits[visit]) {\n          Visits[visit] = true;\n        }\n        identifier = temp[0];\n        if (Identifiers.indexOf(identifier) === -1) {\n          Identifiers.push(identifier);\n        }\n      }\n\n      // Loop through the desired fields, adding a row header for each visit if it\n      // has been selected in the build phase\n      for (i = 0; fields && i < fields.length; i += 1) {\n        for (visit in Visits) {\n          temp = fields[i].split(',');\n          instrument = this.state.selectedFields[temp[0]]\n          if (instrument && instrument[temp[1]] && instrument[temp[1]][visit]) {\n            RowHeaders.push(visit + ' ' + fields[i])\n          }\n        }\n      }\n\n      // Build the row data for the giving identifiers and headers\n      for (identifier in Identifiers) {\n        currow = [];\n        for (colHeader in RowHeaders) {\n          temp = Identifiers[identifier] + ',' + RowHeaders[colHeader].split(' ')[0];\n          index = sessiondata[temp];\n          if (!index) {\n            currow.push('.');\n          } else {\n            temp = index[RowHeaders[colHeader].split(',')[0].split(' ')[1]];\n            fieldSplit = RowHeaders[colHeader].split(' ')[1].split(',');\n            if (temp) {\n              if (temp.data[RowHeaders[colHeader].split(',')[1]] && downloadableFields[fieldSplit[0] + ',' + fieldSplit[1]]) {\n                // Add a downloadable link if the field is set and downloadable\n                href = loris.BaseURL + '/mri/jiv/get_file.php?file=' + temp.data[RowHeaders[colHeader].split(',')[1]];\n                temp = (\n                  <a href={href}>\n                    {temp.data[RowHeaders[colHeader].split(',')[1]]}\n                  </a>\n                );\n              } else {\n                temp = temp.data[RowHeaders[colHeader].split(',')[1]];\n              }\n            } else {\n              temp = '.';\n            }\n            currow.push(temp);\n          }\n        }\n        rowdata.push(currow);\n      }\n    }\n    return {rowdata: rowdata, Identifiers: Identifiers, RowHeaders: RowHeaders, fileData: fileData};\n  }\n\n  dismissAlert() {\n    // Used to dismiss alerts\n    this.setState({\n      alertLoaded: false,\n      alertSaved: false,\n      alertConflict: {\n        show: false\n      }\n    });\n  }\n\n  resetQuery() {\n    // Used to reset the current query\n    this.setState({\n      fields: [],\n      criteria: {},\n      selectedFields: {}\n    });\n  }\n\n  changeDataDisplay(displayID) {\n    // Change the display format of the data table\n    let rowdata = this.getRowData(displayID);\n    this.setState({\n      grouplevel: displayID,\n      rowData: rowdata\n    });\n  }\n\n  updateFilter(filter) {\n    // Update the filter\n    if (filter.children.length === 0) {\n      filter.session = this.props.AllSessions\n    }\n    this.setState({filter});\n  }\n\n  render() {\n    // Renders the html for the component\n\n    let tabs = [];\n    let tabsNav = [];\n    let alert = <div/>;\n\n    // Add the info tab\n    tabs.push(<InfoTabPane\n      key='Info'\n      TabId='Info'\n      UpdatedTime={this.props.UpdatedTime}\n      Loading={this.state.loading}\n      Active={this.state.ActiveTab == 'Info'}\n    />);\n\n    // Add the field select tab\n    tabs.push(<FieldSelectTabPane\n      key='DefineFields'\n      TabId='DefineFields'\n      categories={this.props.categories}\n      onFieldChange={this.fieldChange}\n      selectedFields={this.state.selectedFields}\n      Visits={this.props.Visits}\n      fieldVisitSelect={this.fieldVisitSelect}\n      Loading={this.state.loading}\n      Active={this.state.ActiveTab == 'DefineFields'}\n    />);\n\n    // Add the filter builder tab\n    tabs.push(<FilterSelectTabPane\n        key='DefineFilters'\n        TabId='DefineFilters'\n        categories={this.props.categories}\n        filter={this.state.filter}\n        updateFilter={this.updateFilter}\n        Visits={this.props.Visits}\n        Loading={this.state.loading}\n        Active={this.state.ActiveTab == 'DefineFilters'}\n      />\n    );\n\n    // Define the data displayed type and add the view data tab\n    let displayType = (this.state.grouplevel === 0) ? \"Cross-sectional\" : \"Longitudinal\";\n    tabs.push(<ViewDataTabPane\n      key='ViewData'\n      TabId='ViewData'\n      Active={this.state.ActiveTab == 'ViewData'}\n      Fields={this.state.fields}\n      Criteria={this.state.criteria}\n      Sessions={this.getSessions()}\n      Data={this.state.rowData.rowdata}\n      RowInfo={this.state.rowData.Identifiers}\n      RowHeaders={this.state.rowData.RowHeaders}\n      FileData={this.state.rowData.fileData}\n      onRunQueryClicked={this.runQuery}\n      displayType={displayType}\n      changeDataDisplay={this.changeDataDisplay}\n      Loading={this.state.loading}\n      runQuery={this.runQuery}\n    />);\n\n    // Add the stats tab\n    tabs.push(<StatsVisualizationTabPane\n      key='Statistics'\n      TabId='Statistics'\n      Active={this.state.ActiveTab == 'Statistics'}\n      Fields={this.state.rowData.RowHeaders}\n      Data={this.state.rowData.rowdata}\n      Loading={this.state.loading}\n    />);\n\n    // Add the manage saved queries tab\n    tabs.push(<ManageSavedQueriesTabPane\n      key='SavedQueriesTab'\n      TabId='SavedQueriesTab'\n      userQueries={this.state.queryIDs.User}\n      globalQueries={this.state.queryIDs.Shared}\n      onSaveQuery={this.saveCurrentQuery}\n      queryDetails={this.state.savedQueries}\n      queriesLoaded={this.state.queriesLoaded}\n      Loading={this.state.loading}\n    />);\n\n    // Display load alert if alert is present\n    if (this.state.alertLoaded) {\n      alert = (\n        <div className='alert alert-success' role='alert'>\n          <button type='button' className='close' aria-label='Close' onClick={this.dismissAlert}>\n            <span aria-hidden='true'>&times;</span>\n          </button>\n          <strong>Success</strong> Query Loaded.\n        </div>\n      )\n    }\n\n    // Display save alert if alert is present\n    if (this.state.alertSaved) {\n      alert = (\n        <div className='alert alert-success' role='alert'>\n          <button type='button' className='close' aria-label='Close' onClick={this.dismissAlert}>\n            <span aria-hidden='true'>&times;</span>\n          </button>\n          <strong>Success</strong> Query Saved.\n        </div>\n      )\n    }\n\n    // Display Conflict Query alert\n    if (this.state.alertConflict.show) {\n      alert = (\n        <div className='alert alert-warning' role='alert'>\n          <button type='button' className='close' aria-label='Close' onClick={this.dismissAlert}>\n            <span aria-hidden='true'>&times;</span>\n          </button>\n          <button type='button' className='close' aria-label='Close' onClick={this.dismissAlert}>\n            <span aria-hidden='true'>Override</span>\n          </button>\n          <strong>Error</strong> Query with the same name already exists.\n          <a href='#' class='alert-link' onClick={this.overrideQuery}>Click here to override</a>\n        </div>\n      )\n    }\n\n    let widthClass = 'col-md-12';\n    let sideBar = <div/>;\n\n    // Display the field sidebar for certain tabs\n    if (this.state.fields.length > 0\n      && this.state.ActiveTab !== 'ViewData'\n      && this.state.ActiveTab !== 'Statistics'\n      && this.state.ActiveTab !== 'Info'\n    ) {\n      widthClass = 'col-md-10';\n      sideBar = <div className='col-md-2'>\n        <FieldsSidebar\n          Fields={this.state.fields}\n          Criteria={this.state.criteria}\n          resetQuery={this.resetQuery}\n        />\n      </div>;\n    }\n    return <div>\n      {alert}\n      <div className={widthClass}>\n        <nav className='nav nav-tabs'>\n          <ul className='nav nav-tabs navbar-left' data-tabs='tabs'>\n            <li role='presentation' className='active'><a href='#Info' data-toggle='tab'>Info</a></li>\n            <li role='presentation'><a href='#DefineFields' data-toggle='tab'>Define Fields</a></li>\n            <li role='presentation'><a href='#DefineFilters' data-toggle='tab'>Define Filters</a></li>\n            <li role='presentation'><a href='#ViewData' data-toggle='tab'>View Data</a></li>\n            <li role='presentation'><a href='#Statistics' data-toggle='tab'>Statistical Analysis</a></li>\n          </ul>\n          <SavedQueriesList\n            userQueries={this.state.queryIDs.User}\n            globalQueries={this.state.queryIDs.Shared}\n            queryDetails={this.state.savedQueries}\n            queriesLoaded={this.state.queriesLoaded}\n            onSelectQuery={this.loadSavedQuery}\n            loadedQuery={this.state.loadedQuery}\n          />\n        </nav>\n        <div className='tab-content'>\n          {tabs}\n        </div>\n      </div>\n      {sideBar}\n\n    </div>;\n  }\n}\n\nDataQueryApp.propTypes = {\n  SavedQueries: PropTypes.array,\n  AllSessions: PropTypes.array,\n};\n\nDataQueryApp.defaultProps = {\n  SavedQueries: [],\n  AllSessions: [],\n};\n\n\nwindow.SavedQueriesList = SavedQueriesList;\nwindow.DataQueryApp = DataQueryApp;\nwindow.RDataQueryApp = React.createFactory(DataQueryApp);\n\nexport default DataQueryApp;\n"],"sourceRoot":""}