{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./jsx/Loader.js","webpack:///./jsx/Tabs.js","webpack:///./modules/candidate_parameters/jsx/CandidateParameters.js","webpack:///./modules/candidate_parameters/jsx/CandidateInfo.js","webpack:///./modules/candidate_parameters/jsx/ProbandInfo.js","webpack:///./modules/candidate_parameters/jsx/FamilyInfo.js","webpack:///./modules/candidate_parameters/jsx/ParticipantStatus.js","webpack:///./modules/candidate_parameters/jsx/ConsentStatus.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","React","throwOnDirectAccess","isValidElement","REACT_ELEMENT_TYPE","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","isRequired","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_react","_propTypes","Loader","_classCallCheck","this","_possibleConstructorReturn","__proto__","getPrototypeOf","_react2","default","createElement","className","style","width","parseInt","size","height","Component","Tabs","_this","hash","window","activeTab","updateURL","defaultTab","tabs","length","state","handleClick","getTabs","getTabPanes","tabId","e","setState","onTabChange","scrollDistance","$","scrollTop","map","tab","tabClass","id","href","tabID","role","data-toggle","onClick","label","tabPanes","Children","children","child","cloneElement","tabStyle","marginLeft","marginBottom","VerticalTabs","_this2","TabPane","classList","title","TabId","Title","_CandidateInfo","_ProbandInfo","_FamilyInfo","_ParticipantStatus","_ConsentStatus","_Tabs","CandidateParameters","tabList","actionURL","loris","dataURL","candID","keys","TabContent","component","action","tabName","CandidateInfo","ParticipantStatus","ProbandInfo","FamilyInfo","ConsentStatus","args","QueryString","document","src","candidateParameters","Module","ReactDOM","caveatOptions","true","false","Data","formData","updateResult","errorMessage","isLoaded","loadedData","setFormData","onSubmit","handleSubmit","showAlertMessage","that","dataType","success","data","flaggedCaveatemptor","flagged_caveatemptor","flaggedOther","flagged_other","flaggedReason","flagged_reason","error","errorCode","errorMsg","formElement","JSON","caveatReasonOptions","undefined","disabled","updateButton","ButtonElement","reasonDisabled","reasonRequired","reasonKey","specifyOther","otherDisabled","otherRequired","TextareaElement","onUserInput","ref","required","extraParameterFields","extraParameters","extra_parameters","key2","paramTypeID","ParameterTypeID","types","selectOptions","key3","SelectElement","Description","options","DateElement","alertMessage","alertClass","FormElement","class","StaticElement","text","pscid","myFormData","self","FormData","type","url","cache","contentType","processData","message","refs","alertMsg","_Loader","sexOptions","Male","Female","fetchData","method","ProbandSex","ProbandDoB","ProbandDoB2","_error","_this3","today","Date","dd","getDate","mm","yyyy","getFullYear","dob1","dob2","alert","_error2","_this4","_Loader2","dobRequired","dob2Required","ageDifference","toString","familyMembers","deleteFamilyMember","xhr","XMLHttpRequest","evt","loaded","existingFamilyMembers","relationshipOptions","full_sibling","half_sibling","1st_cousin","addButton","candidateList","candidates","familyMembersHTML","FamilyCandID","relationship","Relationship_type","link","formRefs","familyMember","_key","subOptions","suboptionsRequired","participantStatus","parentIDs","formattedHistory","statusKey","history","line","field","current","statusOptions","participantSuboptions","reasonSpecify","consentOptions","yes","no","consents","consentStatus","consentDate","consentDate2","consentWithdrawal","consentWithdrawal2","console","consent","oldConsent","consentStatuses","newConsent","date1","date2","swal","emptyOption","dateRequired","withdrawalRequired","withdrawalDisabled","withdrawalDate","withdrawals","consentDateLabel","consentDateConfirmationLabel","consentWithdrawalLabel","consentWithdrawalConfirmationLabel","consentKey","consentLabel","consentType","historyConsent","field2"],"mappings":"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","file":"./modules/candidate_parameters/js/CandidateParameters.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","module.exports = React;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Loader component\n */\nclass Loader extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div\n        className='loader'\n        style={{width: parseInt(this.props.size), height: parseInt(this.props.size)}}\n      />\n    );\n  }\n}\n\nLoader.propTypes = {size: PropTypes.string};\nLoader.defaultProps = {size: '120'};\n\nexport default Loader;\n","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = '';\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = '#' + tab.id;\n      let tabID = 'tab-' + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key,\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px',\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  defaultTab: PropTypes.string,\n  updateURL: PropTypes.bool,\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true,\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = '';\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = '#' + tab.id;\n      let tabID = 'tab-' + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key,\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px',\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  defaultTab: PropTypes.string,\n  updateURL: PropTypes.bool,\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true,\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends Component {\n  render() {\n    let classList = 'tab-pane';\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += ' active';\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: PropTypes.string.isRequired,\n  Title: PropTypes.string,\n  activeTab: PropTypes.string,\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane,\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport CandidateInfo from './CandidateInfo';\nimport ProbandInfo from './ProbandInfo';\nimport FamilyInfo from './FamilyInfo';\nimport ParticipantStatus from './ParticipantStatus';\nimport ConsentStatus from './ConsentStatus';\nimport {Tabs, TabPane} from 'Tabs';\n\nclass CandidateParameters extends Component {\n  constructor(props) {\n    super(props);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  getTabPanes(tabList) {\n    const actionURL = `${loris.BaseURL}/candidate_parameters/ajax/formHandler.php`;\n    const dataURL = `${loris.BaseURL}/candidate_parameters/ajax/getData.php?candID=${this.props.candID}`;\n    const tabPanes = Object.keys(tabList).map((key) => {\n      const TabContent = tabList[key].component;\n      return (\n        <TabPane TabId={tabList[key].id} key={key}>\n          <TabContent\n            action={actionURL}\n            dataURL={`${dataURL}&data=${tabList[key].id}`}\n            tabName={tabList[key].id}\n          />\n        </TabPane>\n      );\n    });\n    return tabPanes;\n  }\n\n  render() {\n    let tabList = [\n      {id: 'candidateInfo', label: 'Candidate Information', component: CandidateInfo},\n      {id: 'participantStatus', label: 'Participant Status', component: ParticipantStatus},\n    ];\n\n    if (loris.config('useProband') === 'true') {\n      tabList.push({id: 'probandInfo', label: 'Proband Information', component: ProbandInfo});\n    }\n\n    if (loris.config('useFamilyID') === 'true') {\n      tabList.push({id: 'familyInfo', label: 'Family Information', component: FamilyInfo});\n    }\n\n    if (loris.config('useConsent') === 'true') {\n      tabList.push({id: 'consentStatus', label: 'Consent Status', component: ConsentStatus});\n    }\n\n    return (\n      <div>\n        <a className='btn btn-sm btn-primary'\n           href={loris.BaseURL + '/' + this.props.candID}\n           style={{marginBottom: '20px'}}\n        >\n          Return to timepoint list\n        </a>\n        <br />\n        <Tabs tabs={tabList} defaultTab='candidateInfo' updateURL={true}>\n          {this.getTabPanes(tabList)}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nCandidateParameters.propTypes = {\n  candID: PropTypes.string.isRequired,\n};\n\n/**\n * Render Candidate Parameters component on page load\n */\nconst args = QueryString.get(document.currentScript.src);\n\nwindow.addEventListener('load', () => {\n  const candidateParameters = (\n    <div className=\"page-candidate-parameters\">\n      <CandidateParameters\n        Module=\"candidate_parameters\"\n        candID={args.candID}\n      />\n    </div>\n  );\n\n  ReactDOM.render(candidateParameters, document.getElementById('lorisworkspace'));\n});\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass CandidateInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      caveatOptions: {\n        true: 'True',\n        false: 'False',\n      },\n      Data: [],\n      formData: {},\n      updateResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0,\n    };\n    this.setFormData = this.setFormData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n  }\n\n  componentDidMount() {\n    let that = this;\n    $.ajax(\n      this.props.dataURL,\n      {\n        dataType: 'json',\n        success: function(data) {\n          let formData = {\n            flaggedCaveatemptor: data.flagged_caveatemptor,\n            flaggedOther: data.flagged_other,\n            flaggedReason: data.flagged_reason,\n          };\n\n          // Add parameter values to formData\n          Object.assign(formData, data.parameter_values);\n\n          that.setState({\n            Data: data,\n            isLoaded: true,\n            formData: formData,\n          });\n        },\n        error: function(data, errorCode, errorMsg) {\n          that.setState({\n            error: 'An error occurred when loading the form!',\n          });\n        },\n      }\n    );\n  }\n\n  setFormData(formElement, value) {\n    let formData = JSON.parse(JSON.stringify(this.state.formData));\n    formData[formElement] = value;\n\n    // Reset 'reason' and 'other' fields\n    if (formElement === 'flaggedCaveatemptor' && value === 'false') {\n      formData.flaggedReason = '';\n      formData.flaggedOther = '';\n    }\n\n    // Reset 'other' field\n    if (formElement === 'flaggedReason' &&\n      this.state.Data.caveatReasonOptions[value] !== 'Other') {\n      formData.flaggedOther = '';\n    }\n\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      if (this.state.error !== undefined) {\n        return (\n          <div className=\"alert alert-danger text-center\">\n            <strong>\n              {this.state.error}\n            </strong>\n          </div>\n        );\n      }\n    };\n\n    let disabled = true;\n    let updateButton = null;\n    if (loris.userHasPermission('candidate_parameter_edit')) {\n      disabled = false;\n      updateButton = <ButtonElement label=\"Update\"/>;\n    }\n    let reasonDisabled = true;\n    let reasonRequired = false;\n    if (this.state.formData.flaggedCaveatemptor === 'true') {\n      reasonDisabled = false;\n      reasonRequired = true;\n    }\n\n    let reasonKey = null;\n    let specifyOther = null;\n    let otherDisabled = true;\n    let otherRequired = false;\n    for (let key in this.state.Data.caveatReasonOptions) {\n      if (this.state.Data.caveatReasonOptions.hasOwnProperty(key)) {\n        if (this.state.Data.caveatReasonOptions[key] === 'Other') {\n          reasonKey = key;\n          break;\n        }\n      }\n    }\n\n    if (this.state.formData.flaggedReason === reasonKey) {\n      otherRequired = true;\n      otherDisabled = false;\n    }\n\n    if (this.state.formData.flaggedCaveatemptor === 'false') {\n      reasonDisabled = true;\n      reasonRequired = false;\n      otherDisabled = true;\n      otherRequired = false;\n    }\n\n    if (reasonKey !== null) {\n      specifyOther = <TextareaElement\n        label=\"If Other, please specify\"\n        name=\"flaggedOther\"\n        value={this.state.formData.flaggedOther}\n        onUserInput={this.setFormData}\n        ref=\"flaggedOther\"\n        disabled={otherDisabled}\n        required={otherRequired}\n      />;\n    }\n    let extraParameterFields = [];\n    let extraParameters = this.state.Data.extra_parameters;\n    for (let key2 in extraParameters) {\n      if (extraParameters.hasOwnProperty(key2)) {\n        let paramTypeID = extraParameters[key2].ParameterTypeID;\n        let name = paramTypeID;\n        let value = this.state.formData[paramTypeID];\n\n        switch (extraParameters[key2].Type.substring(0, 3)) {\n          case 'enu':\n            let types = extraParameters[key2].Type.substring(5);\n            types = types.slice(0, -1);\n            types = types.replace(/'/g, '');\n            types = types.split(',');\n            let selectOptions = {};\n            for (let key3 in types) {\n              if (types.hasOwnProperty(key3)) {\n                selectOptions[types[key3]] = types[key3];\n              }\n            }\n\n            extraParameterFields.push(\n              <SelectElement\n                label={extraParameters[key2].Description}\n                name={name}\n                options={selectOptions}\n                value={value}\n                onUserInput={this.setFormData}\n                ref={name}\n                disabled={disabled}\n                key={key2}\n              />\n            );\n            break;\n          case 'dat':\n            extraParameterFields.push(\n              <DateElement\n                label={extraParameters[key2].Description}\n                name={name}\n                value={value}\n                onUserInput={this.setFormData}\n                ref={name}\n                disabled={disabled}\n                key={key2}\n              />\n            );\n            break;\n          default:\n            extraParameterFields.push(\n              <TextareaElement\n                label={extraParameters[key2].Description}\n                name={name}\n                value={value}\n                onUserInput={this.setFormData}\n                ref={name}\n                disabled={disabled}\n                key={key2}\n              />\n            );\n        }\n      }\n    }\n\n    let alertMessage = '';\n    let alertClass = 'alert text-center hide';\n    if (this.state.updateResult) {\n      if (this.state.updateResult === 'success') {\n        alertClass = 'alert alert-success text-center';\n        alertMessage = 'Update Successful!';\n      } else if (this.state.updateResult === 'error') {\n        let errorMessage = this.state.errorMessage;\n        alertClass = 'alert alert-danger text-center';\n        alertMessage = errorMessage ? errorMessage : 'Failed to update!';\n      }\n    }\n\n    return (\n      <div className=\"row\">\n        <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n          {alertMessage}\n        </div>\n        <FormElement\n          name=\"candidateInfo\"\n          onSubmit={this.handleSubmit}\n          ref=\"form\"\n          class=\"col-md-6\">\n          <StaticElement\n            label=\"PSCID\"\n            text={this.state.Data.pscid}\n          />\n          <StaticElement\n            label=\"DCCID\"\n            text={this.state.Data.candID}\n          />\n          <SelectElement\n            label=\"Caveat Emptor Flag for Candidate\"\n            name=\"flaggedCaveatemptor\"\n            options={this.state.caveatOptions}\n            value={this.state.formData.flaggedCaveatemptor}\n            onUserInput={this.setFormData}\n            ref=\"flaggedCaveatemptor\"\n            disabled={disabled}\n            required={true}\n          />\n          <SelectElement\n            label=\"Reason for Caveat Emptor Flag\"\n            name=\"flaggedReason\"\n            options={this.state.Data.caveatReasonOptions}\n            value={this.state.formData.flaggedReason}\n            onUserInput={this.setFormData}\n            ref=\"flaggedReason\"\n            disabled={reasonDisabled}\n            required={reasonRequired}\n          />\n          {specifyOther}\n          {extraParameterFields}\n          {updateButton}\n        </FormElement>\n      </div>\n    );\n  }\n\n  /**\n   * Handles form submission\n   *\n   * @param {event} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    let myFormData = this.state.formData;\n    // Set form data and upload the media file\n    let self = this;\n    let formData = new FormData();\n    for (let key in myFormData) {\n      if (myFormData.hasOwnProperty(key)) {\n        if (myFormData[key] !== '') {\n          formData.append(key, myFormData[key]);\n        }\n      }\n    }\n\n    formData.append('tab', this.props.tabName);\n    formData.append('candID', this.state.Data.candID);\n    $.ajax(\n      {\n        type: 'POST',\n        url: self.props.action,\n        data: formData,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: function(data) {\n          self.setState(\n            {\n              updateResult: 'success',\n            }\n          );\n          self.showAlertMessage();\n        },\n        error: function(err) {\n          if (err.responseText !== '') {\n            let errorMessage = JSON.parse(err.responseText).message;\n            self.setState(\n              {\n                updateResult: 'error',\n                errorMessage: errorMessage,\n              }\n            );\n            self.showAlertMessage();\n          }\n        },\n\n      }\n    );\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    let self = this;\n    if (this.refs['alert-message'] === null) {\n      return;\n    }\n\n    let alertMsg = this.refs['alert-message'];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n      500,\n      function() {\n        self.setState(\n          {\n            updateResult: null,\n          }\n        );\n      }\n    );\n  }\n}\nCandidateInfo.propTypes = {\n  dataURL: PropTypes.string,\n  tabName: PropTypes.string,\n  action: PropTypes.string,\n};\n\n\nexport default CandidateInfo;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'Loader';\n/**\n * Proband Info Component.\n *\n * Renders the contents of the ProbandInfo tab, consisting of the FormElement component\n */\nclass ProbandInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sexOptions: {\n        Male: 'Male',\n        Female: 'Female',\n      },\n      Data: [],\n      formData: {},\n      updateResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0,\n    };\n\n    /**\n     * Bind component instance to custom methods\n     */\n    this.fetchData = this.fetchData.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /**\n   * Retrieve data from the provided URL and save it in state\n   */\n  fetchData() {\n    $.ajax(this.props.dataURL, {\n      method: 'GET',\n      dataType: 'json',\n      success: (data) => {\n        const formData = {\n          ProbandSex: data.ProbandSex,\n          ProbandDoB: data.ProbandDoB,\n          ProbandDoB2: data.ProbandDoB,\n        };\n\n        // Add parameter values to formData\n        Object.assign(formData, data.parameter_values);\n\n        this.setState({\n          formData: formData,\n          Data: data,\n          isLoaded: true,\n        });\n      },\n      error: (error) => {\n        this.setState({\n          error: 'An error occurred when loading the form!',\n        });\n      },\n    });\n  }\n\n  /**\n   * Store the value of the element in this.state.formData\n   *\n   * @param {string} formElement - name of the form element\n   * @param {string} value - value of the form element\n   */\n  setFormData(formElement, value) {\n    let formData = JSON.parse(JSON.stringify(this.state.formData));\n    formData[formElement] = value;\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  /**\n   * Handles form submission\n   *\n   * @param {event} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    let myFormData = this.state.formData;\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1; // January is 0!\n    let yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n    today = yyyy + '-' + mm + '-' + dd;\n    let dob1 = myFormData.ProbandDoB ?\n      myFormData.ProbandDoB : null;\n    let dob2 = myFormData.ProbandDoB2 ?\n      myFormData.ProbandDoB2 : null;\n    if (dob1 !== dob2) {\n      alert('DOB do not match!');\n      return;\n    }\n\n    if (dob1 > today) {\n      alert('Proband date of birth cannot be later than today!');\n      return;\n    }\n\n    // Set form data\n    let formData = new FormData();\n    for (let key in myFormData) {\n      if (myFormData[key] !== '') {\n        formData.append(key, myFormData[key]);\n      }\n    }\n\n    formData.append('tab', this.props.tabName);\n    formData.append('candID', this.state.Data.candID);\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: (data) => {\n        this.setState({\n          updateResult: 'success',\n        });\n        this.showAlertMessage();\n        this.fetchData();\n      },\n      error: (error) => {\n        if (error.responseText !== '') {\n          let errorMessage = JSON.parse(error.responseText).message;\n          this.setState({\n            updateResult: 'error',\n            errorMessage: errorMessage,\n          });\n          this.showAlertMessage();\n        }\n      },\n    });\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    if (this.refs['alert-message'] === null) {\n      return;\n    }\n\n    let alertMsg = this.refs['alert-message'];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n      500,\n      () => {\n        this.setState({\n          updateResult: null,\n        });\n      }\n    );\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return <Loader />;\n    }\n\n    let disabled = true;\n    let updateButton = null;\n    if (loris.userHasPermission('candidate_parameter_edit')) {\n      disabled = false;\n      updateButton = <ButtonElement label =\"Update\" />;\n    }\n\n    let dobRequired = false;\n    let dob2Required = false;\n    if (this.state.formData.ProbandSex !== null) {\n      dobRequired = true;\n    }\n    if (this.state.formData.ProbandDoB !== null) {\n      dob2Required = true;\n    }\n    let extraParameterFields = [];\n    let extraParameters = this.state.Data.extra_parameters;\n    for (let key2 in extraParameters) {\n      if (extraParameters.hasOwnProperty(key2)) {\n        let paramTypeID = extraParameters[key2].ParameterTypeID;\n        let name = paramTypeID;\n        let value = this.state.formData[paramTypeID];\n\n        switch (extraParameters[key2].Type.substring(0, 3)) {\n          case 'enu': {\n            let types = extraParameters[key2].Type.substring(5);\n            types = types.slice(0, -1);\n            types = types.replace(/'/g, '');\n            types = types.split(',');\n            let selectOptions = {};\n            for (let key3 in types) {\n              if (types.hasOwnProperty(key3)) {\n                selectOptions[types[key3]] = types[key3];\n              }\n            }\n\n            extraParameterFields.push(\n              <SelectElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  options={selectOptions}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                  key={key2}\n              />\n            );\n            break;\n          }\n          case 'dat':\n            extraParameterFields.push(\n              <DateElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                  key={key2}\n              />\n          );\n            break;\n          default:\n            extraParameterFields.push(\n              <TextareaElement\n                  label={extraParameters[key2].Description}\n                  name={name}\n                  value={value}\n                  onUserInput={this.setFormData}\n                  ref={name}\n                  disabled={disabled}\n                  key={key2}\n              />\n          );\n        }\n      }\n    }\n\n    let alertMessage = '';\n    let alertClass = 'alert text-center hide';\n    if (this.state.updateResult) {\n      if (this.state.updateResult === 'success') {\n        alertClass = 'alert alert-success text-center';\n        alertMessage = 'Update Successful!';\n      } else if (this.state.updateResult === 'error') {\n        let errorMessage = this.state.errorMessage;\n        alertClass = 'alert alert-danger text-center';\n        alertMessage = errorMessage ? errorMessage : 'Failed to update!';\n      }\n    }\n\n    return (\n      <div className=\"row\">\n        <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n          {alertMessage}\n        </div>\n        <FormElement\n          name=\"probandInfo\"\n          onSubmit={this.handleSubmit}\n          ref=\"form\"\n          class=\"col-md-6\"\n        >\n          <StaticElement\n            label=\"PSCID\"\n            text={this.state.Data.pscid}\n          />\n          <StaticElement\n            label=\"DCCID\"\n            text={this.state.Data.candID}\n          />\n          <SelectElement\n            label=\"Proband Sex\"\n            name=\"ProbandSex\"\n            options={this.state.sexOptions}\n            value={this.state.formData.ProbandSex}\n            onUserInput={this.setFormData}\n            ref=\"ProbandSex\"\n            disabled={disabled}\n            required={true}\n          />\n          <DateElement\n            label=\"DoB Proband\"\n            name=\"ProbandDoB\"\n            value={this.state.formData.ProbandDoB}\n            onUserInput={this.setFormData}\n            ref=\"ProbandDoB\"\n            disabled={disabled}\n            required={dobRequired}\n          />\n          <DateElement\n            label=\"Confirm DoB Proband\"\n            name=\"ProbandDoB2\"\n            value={this.state.formData.ProbandDoB2}\n            onUserInput={this.setFormData}\n            ref=\"ProbandDoB2\"\n            disabled={disabled}\n            required={dob2Required}\n          />\n          <StaticElement\n            label=\"Age Difference (months)\"\n            text={this.state.Data.ageDifference.toString()}\n          />\n          {extraParameterFields}\n          {updateButton}\n        </FormElement>\n      </div>\n    );\n  }\n}\n\nProbandInfo.propTypes = {\n  dataURL: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  tabName: PropTypes.string,\n};\n\nexport default ProbandInfo;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass FamilyInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: [],\n      formData: {},\n      familyMembers: [],\n      updateResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0,\n    };\n    this.setFormData = this.setFormData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n    this.deleteFamilyMember = this.deleteFamilyMember.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  fetchData() {\n    $.ajax(\n      this.props.dataURL,\n      {\n        dataType: 'json',\n        xhr: function() {\n          let xhr = new window.XMLHttpRequest();\n          xhr.addEventListener(\n            'progress',\n            function(evt) {\n              this.setState({\n                loadedData: evt.loaded,\n              });\n            }.bind(this));\n          return xhr;\n        }.bind(this),\n        success: function(data) {\n          this.setState({\n            Data: data,\n            isLoaded: true,\n            familyMembers: data.existingFamilyMembers,\n          });\n        }.bind(this),\n        error: function(data, errorCode, errorMsg) {\n          this.setState({\n            error: 'An error occurred when loading the form!',\n          });\n        }.bind(this),\n      }\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  setFormData(formElement, value) {\n    let formData = this.state.formData;\n    formData[formElement] = value;\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      if (this.state.error !== undefined) {\n        return (\n          <div className=\"alert alert-danger text-center\">\n            <strong>\n              {this.state.error}\n            </strong>\n          </div>\n        );\n      }\n\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    let relationshipOptions = {\n      'full_sibling': 'Full Sibling',\n      'half_sibling': 'Half Sibling',\n      '1st_cousin': 'First Cousin',\n    };\n\n    let disabled = true;\n    let addButton = null;\n    if (loris.userHasPermission('candidate_parameter_edit')) {\n      disabled = false;\n      addButton = <ButtonElement label=\"Add\"/>;\n    }\n\n    let candidateList = this.state.Data.candidates;\n\n    let familyMembers = this.state.familyMembers;\n    let familyMembersHTML = [];\n\n    for (let key in familyMembers) {\n      if (familyMembers.hasOwnProperty(key)) {\n        let candID = familyMembers[key].FamilyCandID;\n        let relationship = familyMembers[key].Relationship_type;\n        let link = '?candID=' + candID + '&identifier=' + candID;\n\n        familyMembersHTML.push(\n          <div key={key}>\n            <StaticElement\n              label=\"Family Member DCCID\"\n              text={<a href={link}>{candID}</a>}\n            />\n            <StaticElement\n              label=\"Relation Type\"\n              text={relationshipOptions[relationship]}\n            />\n            <ButtonElement\n              label=\"Delete\"\n              type=\"button\"\n              onUserInput={this.deleteFamilyMember.bind(null, candID, key, candidateList)}\n            />\n            <hr/>\n          </div>\n        );\n        // remove from list of candidates because it can only be added once\n        delete candidateList[candID];\n      }\n    };\n\n    let alertMessage = '';\n    let alertClass = 'alert text-center hide';\n    if (this.state.updateResult) {\n      if (this.state.updateResult === 'success') {\n        alertClass = 'alert alert-success text-center';\n        alertMessage = 'Update Successful!';\n      } else if (this.state.updateResult === 'error') {\n        let errorMessage = this.state.errorMessage;\n        alertClass = 'alert alert-danger text-center';\n        alertMessage = errorMessage ? errorMessage : 'Failed to update!';\n      }\n    }\n\n    return (\n      <div className=\"row\">\n        <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n          {alertMessage}\n        </div>\n        <FormElement\n          name=\"familyInfo\"\n          onSubmit={this.handleSubmit}\n          ref=\"form\"\n          class=\"col-md-6\"\n        >\n          <StaticElement\n            label=\"PSCID\"\n            text={this.state.Data.pscid}\n          />\n          <StaticElement\n            label=\"DCCID\"\n            text={this.state.Data.candID}\n          />\n          <hr/>\n          {familyMembersHTML}\n          <SelectElement\n            label=\"Family Member ID (DCCID)\"\n            name=\"FamilyCandID\"\n            options={candidateList}\n            onUserInput={this.setFormData}\n            ref=\"FamilyCandID\"\n            disabled={disabled}\n            required={true}\n            value={this.state.formData.FamilyCandID}\n          />\n          <SelectElement\n            label=\"Relation Type\"\n            name=\"Relationship_type\"\n            options={relationshipOptions}\n            onUserInput={this.setFormData}\n            ref=\"Relationship_type\"\n            disabled={disabled}\n            required={true}\n            value={this.state.formData.Relationship_type}\n          />\n          {addButton}\n        </FormElement>\n      </div>\n    );\n  }\n\n  /**\n   * Handles form submission\n   *\n   * @param {event} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    let myFormData = this.state.formData;\n    let self = this;\n    let formData = new FormData();\n    let formRefs = this.refs;\n\n    let familyMembers = this.state.familyMembers;\n    let familyMember = {};\n\n    for (let key in myFormData) {\n      if (myFormData.hasOwnProperty(key)) {\n        if (myFormData[key] !== '') {\n          familyMember[key] = myFormData[key];\n          formData.append(key, myFormData[key]);\n        }\n      }\n    }\n    formData.append('tab', this.props.tabName);\n    formData.append('candID', this.state.Data.candID);\n\n    familyMembers.push(familyMember);\n\n    this.setState({\n      familyMembers: familyMembers,\n    });\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function(data) {\n        self.setState({\n          updateResult: 'success',\n          formData: {},\n        });\n        self.showAlertMessage();\n\n        // Iterates through child components and resets state\n        // to initial state in order to clear the form\n        Object.keys(formRefs).map(function(ref) {\n          if (formRefs[ref].state && formRefs[ref].state.value) {\n            formRefs[ref].state.value = '';\n          }\n        });\n        // rerender components\n        self.forceUpdate();\n      },\n      error: function(err) {\n        let errorMessage = JSON.parse(err.responseText).message;\n        self.setState(\n          {\n            updateResult: 'error',\n            errorMessage: errorMessage,\n          }\n        );\n        self.showAlertMessage();\n      },\n\n    });\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    let self = this;\n    if (this.refs['alert-message'] === null) {\n      return;\n    }\n\n    let alertMsg = this.refs['alert-message'];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n      500,\n      function() {\n        self.setState(\n          {\n            updateResult: null,\n\n          }\n        );\n      });\n  }\n\n  deleteFamilyMember(candID, key, candidateList) {\n    let familyMembers = this.state.familyMembers;\n    delete familyMembers[key];\n\n    // readd to list of possible family members\n    candidateList[candID] = candID;\n\n    this.setState({\n      familyMembers: familyMembers,\n    });\n\n    let myFormData = this.state.formData;\n    let self = this;\n    let formData = new FormData();\n    for (let key in myFormData) {\n      if (myFormData.hasOwnProperty(key)) {\n        if (myFormData[key] !== '') {\n          formData.append(key, myFormData[key]);\n        }\n      }\n    }\n    formData.append('tab', 'deleteFamilyMember');\n    formData.append('candID', this.state.Data.candID);\n    formData.append('familyDCCID', candID);\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formData,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function(data) {\n        self.setState(\n          {\n            updateResult: 'success',\n          });\n        self.showAlertMessage();\n      },\n      error: function(err) {\n        if (err.responseText !== '') {\n          let errorMessage = JSON.parse(err.responseText).message;\n          self.setState(\n            {\n              updateResult: 'error',\n              errorMessage: errorMessage,\n            });\n          self.showAlertMessage();\n        }\n      },\n    });\n  }\n}\nFamilyInfo.propTypes = {\n  dataURL: PropTypes.string,\n  tabName: PropTypes.string,\n  candID: PropTypes.string,\n  action: PropTypes.string,\n};\n\nexport default FamilyInfo;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass ParticipantStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: [],\n      formData: {},\n      updateResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0,\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    let that = this;\n    $.ajax(\n      this.props.dataURL,\n      {\n        dataType: 'json',\n        xhr: function() {\n          let xhr = new window.XMLHttpRequest();\n          xhr.addEventListener(\n            'progress',\n            function(evt) {\n              that.setState(\n                {\n                  loadedData: evt.loaded,\n                }\n              );\n            }\n          );\n          return xhr;\n        },\n        success: function(data) {\n          let formData = {};\n          formData.participantStatus = data.participantStatus;\n          formData.participantSuboptions = data.participantSuboptions;\n          formData.reasonSpecify = data.reasonSpecify;\n\n          that.setState(\n            {\n              Data: data,\n              formData: formData,\n              isLoaded: true,\n            }\n          );\n        },\n        error: function(data, errorCode, errorMsg) {\n          that.setState(\n            {\n              error: 'An error occurred when loading the form!',\n            }\n          );\n        },\n      }\n    );\n  }\n\n  setFormData(formElement, value) {\n    let formData = this.state.formData;\n    let required = this.state.Data.required;\n    if (formElement === 'participantStatus' && required.indexOf(value) < 0) {\n      formData.participantSuboptions = '';\n    }\n    formData[formElement] = value;\n    this.setState(\n      {\n        formData: formData,\n      }\n    );\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      if (this.state.error !== undefined) {\n        return (\n          <div className=\"alert alert-danger text-center\">\n            <strong>{this.state.error}</strong>\n          </div>\n        );\n      }\n    };\n\n    let disabled = true;\n    let updateButton = null;\n    if (loris.userHasPermission('candidate_parameter_edit')) {\n      disabled = false;\n      updateButton = <ButtonElement label=\"Update\"/>;\n    }\n\n        let required = this.state.Data.required;\n        let subOptions = {};\n        let suboptionsRequired = false;\n        let participantStatus = (\n            this.state.formData.participantStatus ?\n            this.state.formData.participantStatus :\n            this.state.Data.participantStatus\n        );\n\n        if (participantStatus && required.indexOf(participantStatus) > -1) {\n            subOptions = this.state.Data.parentIDs[participantStatus];\n            suboptionsRequired = true;\n        }\n\n        let formattedHistory = [];\n        for (let statusKey in this.state.Data.history) {\n            if (this.state.Data.history.hasOwnProperty(statusKey)) {\n                let line = '';\n                for (let field in this.state.Data.history[statusKey]) {\n                    if (this.state.Data.history[statusKey].hasOwnProperty(field)) {\n                        let current = this.state.Data.history[statusKey][field];\n                        if (current !== null) {\n                            switch (field) {\n                                case 'data_entry_date':\n                                    line += '[';\n                                    line += current;\n                                    line += '] ';\n                                    break;\n                                case 'entry_staff':\n                                    line += current;\n                                    line += ' ';\n                                    break;\n                                case 'status':\n                                    line += ' Status: ';\n                                    line += current;\n                                    line += ' ';\n                                    break;\n                                case 'suboption':\n                                    line += 'Details: ';\n                                    line += current;\n                                    line += ' ';\n                                    break;\n                                case 'reason_specify':\n                                    line += 'Comments: ';\n                                    line += current;\n                                    line += ' ';\n                                    break;\n                                default:\n                            }\n                        }\n                    }\n                }\n                formattedHistory.push(<p key={statusKey}>{line}</p>);\n            }\n        }\n\n        let alertMessage = '';\n        let alertClass = 'alert text-center hide';\n        if (this.state.updateResult) {\n            if (this.state.updateResult === 'success') {\n                alertClass = 'alert alert-success text-center';\n                alertMessage = 'Update Successful!';\n            } else if (this.state.updateResult === 'error') {\n                let errorMessage = this.state.errorMessage;\n                alertClass = 'alert alert-danger text-center';\n                alertMessage = errorMessage ? errorMessage : 'Failed to update!';\n            }\n        }\n\n        return (\n            <div className=\"row\">\n            <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n            {alertMessage}\n            </div>\n            <FormElement\n            name=\"participantStatus\"\n            onSubmit={this.handleSubmit}\n            ref=\"form\"\n            class=\"col-md-6\"\n            >\n            <StaticElement label=\"PSCID\" text={this.state.Data.pscid}/>\n            <StaticElement label=\"DCCID\" text={this.state.Data.candID}/>\n            <SelectElement\n            label=\"Participant Status\"\n            name=\"participantStatus\"\n            options={this.state.Data.statusOptions}\n            value={this.state.formData.participantStatus}\n            onUserInput={this.setFormData}\n            ref=\"participantStatus\"\n            disabled={disabled}\n            required={true}\n            />\n            <SelectElement\n            label=\"Specify Reason\"\n            name=\"participantSuboptions\"\n            options={subOptions}\n            value={this.state.formData.participantSuboptions}\n            onUserInput={this.setFormData}\n            ref=\"participantSuboptions\"\n            disabled={!suboptionsRequired}\n            required={suboptionsRequired}\n            />\n            <TextareaElement\n            label=\"Comments\"\n            name=\"reasonSpecify\"\n            value={this.state.formData.reasonSpecify}\n            onUserInput={this.setFormData}\n            ref=\"reasonSpecify\"\n            disabled={disabled}\n            required={false}\n            />\n            {updateButton}\n            {formattedHistory}\n            </FormElement>\n            </div>\n        );\n    }\n\n  /**\n   * Handles form submission\n   *\n   * @param {event} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    let myFormData = this.state.formData;\n    let self = this;\n    let formData = new FormData();\n    for (let key in myFormData) {\n      if (myFormData.hasOwnProperty(key) &&\n        myFormData[key] !== '' &&\n        myFormData[key] !== null &&\n        myFormData[key] !== undefined\n      ) {\n        formData.append(key, myFormData[key]);\n      }\n    }\n\n    formData.append('tab', this.props.tabName);\n    formData.append('candID', this.state.Data.candID);\n    $.ajax(\n      {\n        type: 'POST',\n        url: self.props.action,\n        data: formData,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: function(data) {\n          self.setState(\n            {\n              updateResult: 'success',\n            }\n          );\n          self.showAlertMessage();\n          self.fetchData();\n        },\n        error: function(err) {\n          if (err.responseText !== '') {\n            let errorMessage = JSON.parse(err.responseText).message;\n            self.setState(\n              {\n                updateResult: 'error',\n                errorMessage: errorMessage,\n              }\n            );\n            self.showAlertMessage();\n          }\n        },\n      }\n    );\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    let self = this;\n    if (this.refs['alert-message'] === null) {\n      return;\n    }\n\n    let alertMsg = this.refs['alert-message'];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(\n      500,\n      function() {\n        self.setState(\n          {\n            updateResult: null,\n          }\n        );\n      }\n    );\n  }\n}\nParticipantStatus.propTypes = {\n  dataURL: PropTypes.string,\n  tabName: PropTypes.string,\n  action: PropTypes.string,\n};\n\nexport default ParticipantStatus;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'Loader';\n\n/**\n * Consent Status Component.\n *\n * Renders the contents of the Consent Status tab, consisting of the FormElement component\n */\nclass ConsentStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            consentOptions: {\n                yes: 'Yes',\n                no: 'No',\n            },\n            Data: [],\n            formData: {},\n            error: false,\n            isLoaded: false,\n            loadedData: 0,\n        };\n\n        /**\n         * Bind component instance to custom methods\n         */\n        this.fetchData = this.fetchData.bind(this);\n        this.setFormData = this.setFormData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    /**\n     * Retrieve data from the provided URL and save it in state\n     */\n    fetchData() {\n        $.ajax(this.props.dataURL, {\n            method: 'GET',\n            dataType: 'json',\n            success: (data) => {\n                let formData = {};\n                let consents = data.consents;\n                for (let consentStatus in consents) {\n                    if (consents.hasOwnProperty(consentStatus)) {\n                        let consentDate = consentStatus + '_date';\n                        let consentDate2 = consentStatus + '_date2';\n                        let consentWithdrawal = consentStatus + '_withdrawal';\n                        let consentWithdrawal2 = consentStatus + '_withdrawal2';\n                        formData[consentStatus] = data.consentStatuses[consentStatus];\n                        formData[consentDate] = data.consentDates[consentStatus];\n                        formData[consentDate2] = data.consentDates[consentStatus];\n                        formData[consentWithdrawal] = data.withdrawals[consentStatus];\n                        formData[consentWithdrawal2] = data.withdrawals[consentStatus];\n                    }\n                }\n                this.setState({\n                    Data: data,\n                    formData: formData,\n                    isLoaded: true,\n                });\n            },\n            error: (error) => {\n                console.error(error);\n                this.setState({\n                    error: true,\n                });\n            },\n        });\n    }\n\n    /**\n     * Store the value of the element in this.state.formData\n     *\n     * @param {string} formElement - name of the form element\n     * @param {string} value - value of the form element\n     */\n    setFormData(formElement, value) {\n        let formData = this.state.formData;\n        formData[formElement] = value;\n        for (let consent in this.state.Data.consents) {\n            if (this.state.Data.consents.hasOwnProperty(consent)) {\n                const oldConsent = this.state.Data.consentStatuses[consent];\n                const newConsent = this.state.formData[consent];\n                // Clear withdrawal date if consent status changes from no\n                // (or empty if uncleaned data) to yes\n                if (formElement === consent) {\n                    if ((newConsent === 'yes' && oldConsent !== 'yes') ||\n                        (newConsent === 'no' && oldConsent === null)) {\n                        formData[consent + '_withdrawal'] = '';\n                        formData[consent + '_withdrawal2'] = '';\n                    }\n                }\n            }\n        }\n        this.setState({\n            formData: formData,\n        });\n    }\n\n    /**\n     * Handles form submission\n     *\n     * @param {event} e - Form submission event\n     */\n    handleSubmit(e) {\n        e.preventDefault();\n        let myFormData = this.state.formData;\n        let today = new Date();\n        let dd = today.getDate();\n        let mm = today.getMonth() + 1; // January is 0!\n        let yyyy = today.getFullYear();\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        today = yyyy + '-' + mm + '-' + dd;\n        for (let consentStatus in this.state.Data.consents) {\n            if (this.state.Data.consents.hasOwnProperty(consentStatus)) {\n                let label = this.state.Data.consents[consentStatus];\n\n                let consentDate = consentStatus + '_date';\n                let consentDate2 = consentStatus + '_date2';\n\n                let date1 = myFormData[consentDate] ?\n                    myFormData[consentDate] : null;\n                let date2 = myFormData[consentDate2] ?\n                    myFormData[consentDate2] : null;\n\n                if (date1 !== date2) {\n                    alert(label + ' dates do not match!');\n                    return;\n                }\n                if (date1 > today) {\n                    alert(label + ' date cannot be later than today!');\n                    return;\n                }\n\n                let consentWithdrawal = consentStatus + '_withdrawal';\n                let consentWithdrawal2 = consentStatus + '_withdrawal2';\n\n                date1 = myFormData[consentWithdrawal] ?\n                    myFormData[consentWithdrawal] : null;\n                date2 = myFormData[consentWithdrawal2] ?\n                    myFormData[consentWithdrawal2] : null;\n\n                if (date1 !== date2) {\n                    alert(label + ' withdrawal dates do not match!');\n                    return;\n                }\n                if (date1 > today) {\n                    alert(label + ' withdrawal date cannot be later than today!');\n                    return;\n                }\n            }\n        }\n        // Set form data\n        let formData = new FormData();\n        for (let key in myFormData) {\n            // Does not submit data with empty string\n            if (myFormData[key] !== '') {\n                formData.append(key, myFormData[key]);\n            }\n        }\n        formData.append('tab', this.props.tabName);\n        formData.append('candID', this.state.Data.candID);\n        $.ajax({\n            type: 'POST',\n            url: this.props.action,\n            data: formData,\n            cache: false,\n            contentType: false,\n            processData: false,\n            success: (data) => {\n                swal('Success!', 'Update successful.', 'success');\n                this.fetchData();\n            },\n            error: (error) => {\n                console.error(error);\n                let errorMessage = error.responseText || 'Update failed.';\n                swal('Error!', errorMessage, 'error');\n            },\n        });\n    }\n\n    render() {\n        // If error occurs, return a message.\n        // XXX: Replace this with a UI component for 500 errors.\n        if (this.state.error) {\n            return <h3>An error occured while loading the page.</h3>;\n        }\n\n        if (!this.state.isLoaded) {\n            return <Loader />;\n        }\n\n        let disabled = true;\n        let updateButton = null;\n        if (loris.userHasPermission('candidate_parameter_edit')) {\n            disabled = false;\n            updateButton = <ButtonElement label ='Update' />;\n        }\n        const emptyOption = [];\n        const dateRequired = [];\n        const withdrawalRequired = [];\n        const withdrawalDisabled = [];\n        let i = 0;\n        for (let consent in this.state.Data.consents) {\n            if (this.state.Data.consents.hasOwnProperty(consent)) {\n                const oldConsent = this.state.Data.consentStatuses[consent];\n                const newConsent = this.state.formData[consent];\n                const withdrawalDate = this.state.Data.withdrawals[consent];\n                // Set defaults\n                emptyOption[i] = true;\n                dateRequired[i] = false;\n                withdrawalRequired[i] = false;\n                // Let date of withdrawal field be disabled until it is needed\n                withdrawalDisabled[i] = true;\n                // If answer to consent is 'yes', require date of consent\n                if (newConsent === 'yes') {\n                    dateRequired[i] = true;\n                }\n                // If answer to consent is 'no', require date of consent\n                if (newConsent === 'no') {\n                    dateRequired[i] = true;\n                    // If answer was previously 'yes' and consent is now being withdrawn, enable and require withdrawal date\n                    // If consent was previously withdrawn and stays withdrawn, enable and require withdrawal date\n                    if (oldConsent === 'yes' || (oldConsent === 'no' && withdrawalDate)) {\n                        withdrawalDisabled[i] = false;\n                        withdrawalRequired[i] = true;\n                    }\n                }\n                // Disallow clearing a valid consent status by removing empty option\n                if (oldConsent === 'no' || oldConsent === 'yes') {\n                    emptyOption[i] = false;\n                }\n                i++;\n            }\n        }\n\n        let consents = [];\n        i = 0;\n        for (let consentStatus in this.state.Data.consents) {\n            if (this.state.Data.consents.hasOwnProperty(consentStatus)) {\n                let label = this.state.Data.consents[consentStatus];\n                let consentDate = consentStatus + '_date';\n                let consentDate2 = consentStatus + '_date2';\n                let consentDateLabel = 'Date of ' + label;\n                let consentDateConfirmationLabel = 'Confirmation Date of ' + label;\n                let consentWithdrawal = consentStatus + '_withdrawal';\n                let consentWithdrawal2 = consentStatus + '_withdrawal2';\n                let consentWithdrawalLabel = 'Date of Withdrawal of ' + label;\n                let consentWithdrawalConfirmationLabel =\n                    'Confirmation Date of Withdrawal of ' + label;\n\n                const consent = (\n                    <div key={i}>\n                        <SelectElement\n                            label={label}\n                            name={consentStatus}\n                            options={this.state.consentOptions}\n                            value={this.state.formData[consentStatus]}\n                            onUserInput={this.setFormData}\n                            ref={consentStatus}\n                            disabled={disabled}\n                            required={false}\n                            emptyOption={emptyOption[i]}\n                        />\n                        <DateElement\n                            label={consentDateLabel}\n                            name={consentDate}\n                            value={this.state.formData[consentDate]}\n                            onUserInput={this.setFormData}\n                            ref={consentDate}\n                            disabled={disabled}\n                            required={dateRequired[i]}\n                        />\n                        <DateElement\n                            label={consentDateConfirmationLabel}\n                            name={consentDate2}\n                            value={this.state.formData[consentDate2]}\n                            onUserInput={this.setFormData}\n                            ref={consentDate2}\n                            disabled={disabled}\n                            required={dateRequired[i]}\n                        />\n                        <DateElement\n                            label={consentWithdrawalLabel}\n                            name={consentWithdrawal}\n                            value={this.state.formData[consentWithdrawal]}\n                            onUserInput={this.setFormData}\n                            ref={consentWithdrawal}\n                            disabled={disabled || withdrawalDisabled[i]}\n                            required={withdrawalRequired[i]}\n                        />\n                        <DateElement\n                            label={consentWithdrawalConfirmationLabel}\n                            name={consentWithdrawal2}\n                            value={this.state.formData[consentWithdrawal2]}\n                            onUserInput={this.setFormData}\n                            ref={consentWithdrawal2}\n                            disabled={disabled || withdrawalDisabled[i]}\n                            required={withdrawalRequired[i]}\n                        />\n                        <hr/>\n                    </div>\n                );\n                consents.push(consent);\n                i++;\n            }\n        }\n\n        let formattedHistory = [];\n        for (let consentKey in this.state.Data.history) {\n            if (this.state.Data.history.hasOwnProperty(consentKey)) {\n                let consentLabel = this.state.Data.history[consentKey].label;\n                let consentType = this.state.Data.history[consentKey].consentType;\n                for (let field in this.state.Data.history[consentKey]) {\n                    if (this.state.Data.history[consentKey].hasOwnProperty(field)) {\n                        let line = '';\n                        let historyConsent = this.state.Data.history[consentKey][field];\n                        for (let field2 in historyConsent) {\n                            if (historyConsent.hasOwnProperty(field2)) {\n                                let current = historyConsent[field2];\n                                if (current !== null) {\n                                    switch (field2) {\n                                        case 'data_entry_date':\n                                            line += '[';\n                                            line += current;\n                                            line += '] ';\n                                            break;\n                                        case 'entry_staff':\n                                            line += current;\n                                            line += ' ';\n                                            break;\n                                        case consentType:\n                                            line += consentLabel + ' Status: ';\n                                            line += current;\n                                            line += ' ';\n                                            break;\n                                        case consentType + '_date':\n                                            line += 'Date of Consent: ';\n                                            line += current;\n                                            line += ' ';\n                                            break;\n                                        case consentType + '_withdrawal':\n                                            line += 'Date of Consent Withdrawal: ';\n                                            line += current;\n                                            line += ' ';\n                                            break;\n                                        default:\n                                    }\n                                }\n                            }\n                        }\n                        formattedHistory.push(<p key={field}>{line}</p>);\n                    }\n                }\n            }\n        }\n\n        return (\n            <div className=\"row\">\n                <FormElement\n                    name=\"consentStatus\"\n                    onSubmit={this.handleSubmit}\n                    ref=\"form\"\n                    class=\"col-md-6\"\n                >\n                    <StaticElement label=\"PSCID\" text={this.state.Data.pscid} />\n                    <StaticElement label=\"DCCID\" text={this.state.Data.candID} />\n                    {consents}\n                    {updateButton}\n                    {formattedHistory}\n                </FormElement>\n            </div>\n        );\n    }\n}\n\nConsentStatus.propTypes = {\n    dataURL: PropTypes.string.isRequired,\n    action: PropTypes.string.isRequired,\n    tabName: PropTypes.string,\n};\n\nexport default ConsentStatus;\n"],"sourceRoot":""}